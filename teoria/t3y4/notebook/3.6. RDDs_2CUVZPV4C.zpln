{
  "paragraphs": [
    {
      "text": "%md\n## RDD: Resilient Distributed Datasets\n\n-   Colección inmutable y distribuida de elementos que pueden manipularse en paralelo\n    -   El tipo de datos más básico en Spark\n- Al igual que con los DataFrames, con los RDDs podemos:\n    -   Crearlos\n    -   Transformarlos en otros RDDs (o DataFrames)\n    -   Realizar acciones para extraer información\n-   Proporcionan un control más fino sobre el particionado y la distribución de datos\n\n\nEn Scala y Java las operaciones que se pueden hacer sobre los RDDs y los DataSets son muy parecidas\n\n-   API Python para RDDs: https://spark.apache.org/docs/2.4.5/api/python/pyspark.html#pyspark.RDD\n-   API Scala para RDDs: https://spark.apache.org/docs/latest/api/scala/org/apache/spark/rdd/index.html",
      "user": "anonymous",
      "dateUpdated": "2021-10-28 16:40:43.638",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRDD: Resilient Distributed Datasets\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003eColección inmutable y distribuida de elementos que pueden manipularse en paralelo\n    \u003cul\u003e\n      \u003cli\u003eEl tipo de datos más básico en Spark\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eAl igual que con los DataFrames, con los RDDs podemos:\n    \u003cul\u003e\n      \u003cli\u003eCrearlos\u003c/li\u003e\n      \u003cli\u003eTransformarlos en otros RDDs (o DataFrames)\u003c/li\u003e\n      \u003cli\u003eRealizar acciones para extraer información\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eProporcionan un control más fino sobre el particionado y la distribución de datos\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEn Scala y Java las operaciones que se pueden hacer sobre los RDDs y los DataSets son muy parecidas\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eAPI Python para RDDs: \u003ca href\u003d\"https://spark.apache.org/docs/2.4.5/api/python/pyspark.html#pyspark.RDD\"\u003ehttps://spark.apache.org/docs/2.4.5/api/python/pyspark.html#pyspark.RDD\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eAPI Scala para RDDs: \u003ca href\u003d\"https://spark.apache.org/docs/latest/api/scala/org/apache/spark/rdd/index.html\"\u003ehttps://spark.apache.org/docs/latest/api/scala/org/apache/spark/rdd/index.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371244_789195257",
      "id": "20170330-180357_1274162593",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2021-10-28 16:40:43.639",
      "dateFinished": "2021-10-28 16:40:43.668",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Creación de RDDs\n\nPodemos crear RDDs a partir de una colección de datos o desde ficheros",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:37.482",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCreación de RDDs\u003c/h2\u003e\n\u003cp\u003ePodemos crear RDDs a partir de una colección de datos o desde ficheros\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371249_799583477",
      "id": "20170330-180412_2137074523",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2018-11-07 09:20:56.000",
      "dateFinished": "2018-11-07 09:20:56.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\nRDDs a partir de una colección\n\n  - Utilizan el SparkContext (sc en el terminal o el notebook)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:37.482",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eRDDs a partir de una colección\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eUtilizan el SparkContext (sc en el terminal o el notebook)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541345650129_-137301302",
      "id": "20181104-153410_1505736369",
      "dateCreated": "2018-11-04 15:34:10.000",
      "dateStarted": "2018-11-04 17:03:16.000",
      "dateFinished": "2018-11-04 17:03:16.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Ejemplo en PySpark\nrdd1 \u003d sc.parallelize([1,2,3,4,5,6,7,8])\nprint(rdd1.collect())\n\nimport numpy as np\nrdd2\u003dsc.parallelize(np.array(range(100)))\nprint(rdd2.collect())\n\n# Los RDDs aceptan listas de tipos diferentes\nrdd5 \u003d sc.parallelize([1,2,\"tres\",4])\nprint(rdd5.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:29:32.798",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[1, 2, 3, 4, 5, 6, 7, 8]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]\n[1, 2, \u0027tres\u0027, 4]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371249_799583477",
      "id": "20170330-180431_2128622947",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-11-25 15:29:33.299",
      "dateFinished": "2020-11-25 15:29:33.587",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n// RDDs en Scala\nval rdd3 \u003d sc.parallelize(Seq(1,2,3,4,5,6,7,8))\nrdd3.collect\n\nval rdd4 \u003d sc.parallelize(1 to 100)\nrdd4.collect\n\n// Los RDDs aceptan listas de tipos diferentes\nval rdd5 \u003d sc.parallelize(Seq(1,2,\"tres\",4))\nrdd5.collect",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 19:52:46.893",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371250_800737724",
      "id": "20170330-180459_1754067389",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-06-15 19:52:47.168",
      "dateFinished": "2020-06-15 19:52:48.050",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n### RDDs y DataSets a partir de ficheros de texto",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:38.668",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRDDs y DataSets a partir de ficheros de texto\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371252_798429231",
      "id": "20170330-180609_2069822837",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2018-11-07 09:21:06.000",
      "dateFinished": "2018-11-07 09:21:06.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Ejemplo en PySpark\nquijoteRDD \u003d sc.textFile(\"/datos/quijote.txt\")\n\nprint(quijoteRDD.take(1000))",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:30:20.733",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[u\u0027The Project Gutenberg EBook of Don Quijote, by Miguel de Cervantes Saavedra\u0027, u\u0027\u0027, u\u0027This eBook is for the use of anyone anywhere at no cost and with\u0027, u\u0027almost no restrictions whatsoever.  You may copy it, give it away or\u0027, u\u0027re-use it under the terms of the Project Gutenberg License included\u0027, u\u0027with this eBook or online at www.gutenberg.net\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Title: Don Quijote\u0027, u\u0027\u0027, u\u0027Author: Miguel de Cervantes Saavedra\u0027, u\u0027\u0027, u\u0027Posting Date: April 27, 2010 [EBook #2000]\u0027, u\u0027Release Date: December, 1999\u0027, u\u0027\u0027, u\u0027Language: Spanish\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027*** START OF THIS PROJECT GUTENBERG EBOOK DON QUIJOTE ***\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Produced by an anonymous Project Gutenberg volunteer. Text\u0027, u\u0027file corrections and new HTML file by Joaquin Cuenca Abela.\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027El ingenioso hidalgo don Quijote de la Mancha\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027TASA\u0027, u\u0027\u0027, u\u0027Yo, Juan Gallo de Andrada, escribano de C\\xe1mara del Rey nuestro se\\xf1or, de\u0027, u\u0027los que residen en su Consejo, certifico y doy fe que, habiendo visto por\u0027, u\u0027los se\\xf1ores d\\xe9l un libro intitulado El ingenioso hidalgo de la Mancha,\u0027, u\u0027compuesto por Miguel de Cervantes Saavedra, tasaron cada pliego del dicho\u0027, u\u0027libro a tres maraved\\xeds y medio; el cual tiene ochenta y tres pliegos, que\u0027, u\u0027al dicho precio monta el dicho libro docientos y noventa maraved\\xeds y medio,\u0027, u\u0027en que se ha de vender en papel; y dieron licencia para que a este precio\u0027, u\u0027se pueda vender, y mandaron que esta tasa se ponga al principio del dicho\u0027, u\u0027libro, y no se pueda vender sin ella. Y, para que dello conste, di la\u0027, u\u0027presente en Valladolid, a veinte d\\xedas del mes de deciembre de mil y\u0027, u\u0027seiscientos y cuatro a\\xf1os.\u0027, u\u0027\u0027, u\u0027Juan Gallo de Andrada.\u0027, u\u0027\u0027, u\u0027TESTIMONIO DE LAS ERRATAS\u0027, u\u0027\u0027, u\u0027Este libro no tiene cosa digna que no corresponda a su original; en\u0027, u\u0027testimonio de lo haber correcto, di esta fee. En el Colegio de la Madre de\u0027, u\u0027Dios de los Te\\xf3logos de la Universidad de Alcal\\xe1, en primero de diciembre\u0027, u\u0027de 1604 a\\xf1os.\u0027, u\u0027\u0027, u\u0027El licenciado Francisco Murcia de la Llana.\u0027, u\u0027\u0027, u\u0027EL REY\u0027, u\u0027\u0027, u\u0027Por cuanto por parte de vos, Miguel de Cervantes, nos fue fecha relaci\\xf3n\u0027, u\u0027que hab\\xedades compuesto un libro intitulado El ingenioso hidalgo de la\u0027, u\u0027Mancha, el cual os hab\\xeda costado mucho trabajo y era muy \\xfatil y provechoso,\u0027, u\u0027nos pedistes y suplicastes os mand\\xe1semos dar licencia y facultad para le\u0027, u\u0027poder imprimir, y previlegio por el tiempo que fu\\xe9semos servidos, o como la\u0027, u\u0027nuestra merced fuese; lo cual visto por los del nuestro Consejo, por cuanto\u0027, u\u0027en el dicho libro se hicieron las diligencias que la prem\\xe1tica \\xfaltimamente\u0027, u\u0027por nos fecha sobre la impresi\\xf3n de los libros dispone, fue acordado que\u0027, u\u0027deb\\xedamos mandar dar esta nuestra c\\xe9dula para vos, en la dicha raz\\xf3n; y nos\u0027, u\u0027tuv\\xedmoslo por bien. Por la cual, por os hacer bien y merced, os damos\u0027, u\u0027licencia y facultad para que vos, o la persona que vuestro poder hubiere, y\u0027, u\u0027no otra alguna, pod\\xe1is imprimir el dicho libro, intitulado El ingenioso\u0027, u\u0027hidalgo de la Mancha, que desuso se hace menci\\xf3n, en todos estos nuestros\u0027, u\u0027reinos de Castilla, por tiempo y espacio de diez a\\xf1os, que corran y se\u0027, u\u0027cuenten desde el dicho d\\xeda de la data desta nuestra c\\xe9dula; so pena que la\u0027, u\u0027persona o personas que, sin tener vuestro poder, lo imprimiere o vendiere,\u0027, u\u0027o hiciere imprimir o vender, por el mesmo caso pierda la impresi\\xf3n que\u0027, u\u0027hiciere, con los moldes y aparejos della; y m\\xe1s, incurra en pena de\u0027, u\u0027cincuenta mil maraved\\xeds cada vez que lo contrario hiciere. La cual dicha\u0027, u\u0027pena sea la tercia parte para la persona que lo acusare, y la otra tercia\u0027, u\u0027parte para nuestra C\\xe1mara, y la otra tercia parte para el juez que lo\u0027, u\u0027sentenciare. Con tanto que todas las veces que hubi\\xe9redes de hacer imprimir\u0027, u\u0027el dicho libro, durante el tiempo de los dichos diez a\\xf1os, le traig\\xe1is al\u0027, u\u0027nuestro Consejo, juntamente con el original que en \\xe9l fue visto, que va\u0027, u\u0027rubricado cada plana y firmado al fin d\\xe9l de Juan Gallo de Andrada, nuestro\u0027, u\u0027Escribano de C\\xe1mara, de los que en \\xe9l residen, para saber si la dicha\u0027, u\u0027impresi\\xf3n est\\xe1 conforme el original; o traig\\xe1is fe en p\\xfablica forma de c\\xf3mo\u0027, u\u0027por corretor nombrado por nuestro mandado, se vio y corrigi\\xf3 la dicha\u0027, u\u0027impresi\\xf3n por el original, y se imprimi\\xf3 conforme a \\xe9l, y quedan impresas\u0027, u\u0027las erratas por \\xe9l apuntadas, para cada un libro de los que as\\xed fueren\u0027, u\u0027impresos, para que se tase el precio que por cada volume hubi\\xe9redes de\u0027, u\u0027haber. Y mandamos al impresor que as\\xed imprimiere el dicho libro, no imprima\u0027, u\u0027el principio ni el primer pliego d\\xe9l, ni entregue m\\xe1s de un solo libro con\u0027, u\u0027el original al autor, o persona a cuya costa lo imprimiere, ni otro alguno,\u0027, u\u0027para efeto de la dicha correci\\xf3n y tasa, hasta que antes y primero el dicho\u0027, u\u0027libro est\\xe9 corregido y tasado por los del nuestro Consejo; y, estando\u0027, u\u0027hecho, y no de otra manera, pueda imprimir el dicho principio y primer\u0027, u\u0027pliego, y sucesivamente ponga esta nuestra c\\xe9dula y la aprobaci\\xf3n, tasa y\u0027, u\u0027erratas, so pena de caer e incurrir en las penas contenidas en las leyes y\u0027, u\u0027prem\\xe1ticas destos nuestros reinos. Y mandamos a los del nuestro Consejo, y\u0027, u\u0027a otras cualesquier justicias dellos, guarden y cumplan esta nuestra c\\xe9dula\u0027, u\u0027y lo en ella contenido. Fecha en Valladolid, a veinte y seis d\\xedas del mes\u0027, u\u0027de setiembre de mil y seiscientos y cuatro a\\xf1os.\u0027, u\u0027\u0027, u\u0027YO, EL REY.\u0027, u\u0027\u0027, u\u0027Por mandado del Rey nuestro se\\xf1or:\u0027, u\u0027\u0027, u\u0027Juan de Amezqueta.\u0027, u\u0027\u0027, u\u0027AL DUQUE DE B\\xc9JAR,\u0027, u\u0027\u0027, u\u0027marqu\\xe9s de Gibrale\\xf3n, conde de Benalc\\xe1zar y Ba\\xf1ares, vizconde de La Puebla de\u0027, u\u0027Alcocer, se\\xf1or de las villas de Capilla, Curiel y Burguillos\u0027, u\u0027\u0027, u\u0027En fe del buen acogimiento y honra que hace Vuestra Excelencia a toda\u0027, u\u0027suerte de libros, como pr\\xedncipe tan inclinado a favorecer las buenas artes,\u0027, u\u0027mayormente las que por su nobleza no se abaten al servicio y granjer\\xedas del\u0027, u\u0027vulgo, he determinado de sacar a luz al Ingenioso hidalgo don Quijote de la\u0027, u\u0027Mancha, al abrigo del clar\\xedsimo nombre de Vuestra Excelencia, a quien, con\u0027, u\u0027el acatamiento que debo a tanta grandeza, suplico le reciba agradablemente\u0027, u\u0027en su protecci\\xf3n, para que a su sombra, aunque desnudo de aquel precioso\u0027, u\u0027ornamento de elegancia y erudici\\xf3n de que suelen andar vestidas las obras\u0027, u\u0027que se componen en las casas de los hombres que saben, ose parecer\u0027, u\u0027seguramente en el juicio de algunos que, contini\\xe9ndose en los l\\xedmites de su\u0027, u\u0027ignorancia, suelen condenar con m\\xe1s rigor y menos justicia los trabajos\u0027, u\u0027ajenos; que, poniendo los ojos la prudencia de Vuestra Excelencia en mi\u0027, u\u0027buen deseo, f\\xedo que no desde\\xf1ar\\xe1 la cortedad de tan humilde servicio.\u0027, u\u0027\u0027, u\u0027Miguel de Cervantes Saavedra.\u0027, u\u0027\u0027, u\u0027PR\\xd3LOGO\u0027, u\u0027\u0027, u\u0027Desocupado lector: sin juramento me podr\\xe1s creer que quisiera que este\u0027, u\u0027libro, como hijo del entendimiento, fuera el m\\xe1s hermoso, el m\\xe1s gallardo y\u0027, u\u0027m\\xe1s discreto que pudiera imaginarse. Pero no he podido yo contravenir al\u0027, u\u0027orden de naturaleza; que en ella cada cosa engendra su semejante. Y as\\xed,\u0027, u\u0027\\xbfqu\\xe9 podr\\xe1 engendrar el est\\xe9ril y mal cultivado ingenio m\\xedo, sino la\u0027, u\u0027historia de un hijo seco, avellanado, antojadizo y lleno de pensamientos\u0027, u\u0027varios y nunca imaginados de otro alguno, bien como quien se engendr\\xf3 en\u0027, u\u0027una c\\xe1rcel, donde toda incomodidad tiene su asiento y donde todo triste\u0027, u\u0027ruido hace su habitaci\\xf3n? El sosiego, el lugar apacible, la amenidad de los\u0027, u\u0027campos, la serenidad de los cielos, el murmurar de las fuentes, la quietud\u0027, u\u0027del esp\\xedritu son grande parte para que las musas m\\xe1s est\\xe9riles se muestren\u0027, u\u0027fecundas y ofrezcan partos al mundo que le colmen de maravilla y de\u0027, u\u0027contento. Acontece tener un padre un hijo feo y sin gracia alguna, y el\u0027, u\u0027amor que le tiene le pone una venda en los ojos para que no vea sus faltas,\u0027, u\u0027antes las juzga por discreciones y lindezas y las cuenta a sus amigos por\u0027, u\u0027agudezas y donaires. Pero yo, que, aunque parezco padre, soy padrastro de\u0027, u\u0027Don Quijote, no quiero irme con la corriente del uso, ni suplicarte, casi\u0027, u\u0027con las l\\xe1grimas en los ojos, como otros hacen, lector car\\xedsimo, que\u0027, u\u0027perdones o disimules las faltas que en este mi hijo vieres; y ni eres su\u0027, u\u0027pariente ni su amigo, y tienes tu alma en tu cuerpo y tu libre albedr\\xedo\u0027, u\u0027como el m\\xe1s pintado, y est\\xe1s en tu casa, donde eres se\\xf1or della, como el\u0027, u\u0027rey de sus alcabalas, y sabes lo que com\\xfanmente se dice: que debajo de mi\u0027, u\u0027manto, al rey mato. Todo lo cual te esenta y hace libre de todo respecto y\u0027, u\u0027obligaci\\xf3n; y as\\xed, puedes decir de la historia todo aquello que te\u0027, u\u0027pareciere, sin temor que te calunien por el mal ni te premien por el bien\u0027, u\u0027que dijeres della.\u0027, u\u0027\u0027, u\u0027S\\xf3lo quisiera d\\xe1rtela monda y desnuda, sin el ornato de pr\\xf3logo, ni de la\u0027, u\u0027inumerabilidad y cat\\xe1logo de los acostumbrados sonetos, epigramas y elogios\u0027, u\u0027que al principio de los libros suelen ponerse. Porque te s\\xe9 decir que,\u0027, u\u0027aunque me cost\\xf3 alg\\xfan trabajo componerla, ninguno tuve por mayor que hacer\u0027, u\u0027esta prefaci\\xf3n que vas leyendo. Muchas veces tom\\xe9 la pluma para escribille,\u0027, u\u0027y muchas la dej\\xe9, por no saber lo que escribir\\xeda; y, estando una suspenso,\u0027, u\u0027con el papel delante, la pluma en la oreja, el codo en el bufete y la mano\u0027, u\u0027en la mejilla, pensando lo que dir\\xeda, entr\\xf3 a deshora un amigo m\\xedo,\u0027, u\u0027gracioso y bien entendido, el cual, vi\\xe9ndome tan imaginativo, me pregunt\\xf3\u0027, u\u0027la causa; y, no encubri\\xe9ndosela yo, le dije que pensaba en el pr\\xf3logo que\u0027, u\u0027hab\\xeda de hacer a la historia de don Quijote, y que me ten\\xeda de suerte que\u0027, u\u0027ni quer\\xeda hacerle, ni menos sacar a luz las haza\\xf1as de tan noble caballero.\u0027, u\u0027\u0027, u\u0027-Porque, \\xbfc\\xf3mo quer\\xe9is vos que no me tenga confuso el qu\\xe9 dir\\xe1 el antiguo\u0027, u\u0027legislador que llaman vulgo cuando vea que, al cabo de tantos a\\xf1os como ha\u0027, u\u0027que duermo en el silencio del olvido, salgo ahora, con todos mis a\\xf1os a\u0027, u\u0027cuestas, con una leyenda seca como un esparto, ajena de invenci\\xf3n, menguada\u0027, u\u0027de estilo, pobre de concetos y falta de toda erudici\\xf3n y doctrina; sin\u0027, u\u0027acotaciones en las m\\xe1rgenes y sin anotaciones en el fin del libro, como veo\u0027, u\u0027que est\\xe1n otros libros, aunque sean fabulosos y profanos, tan llenos de\u0027, u\u0027sentencias de Arist\\xf3teles, de Plat\\xf3n y de toda la caterva de fil\\xf3sofos, que\u0027, u\u0027admiran a los leyentes y tienen a sus autores por hombres le\\xeddos, eruditos\u0027, u\u0027y elocuentes? \\xa1Pues qu\\xe9, cuando citan la Divina Escritura! No dir\\xe1n sino\u0027, u\u0027que son unos santos Tomases y otros doctores de la Iglesia; guardando en\u0027, u\u0027esto un decoro tan ingenioso, que en un rengl\\xf3n han pintado un enamorado\u0027, u\u0027destra\\xeddo y en otro hacen un sermoncico cristiano, que es un contento y un\u0027, u\u0027regalo o\\xedlle o leelle. De todo esto ha de carecer mi libro, porque ni tengo\u0027, u\u0027qu\\xe9 acotar en el margen, ni qu\\xe9 anotar en el fin, ni menos s\\xe9 qu\\xe9 autores\u0027, u\u0027sigo en \\xe9l, para ponerlos al principio, como hacen todos, por las letras\u0027, u\u0027del A.B.C., comenzando en Arist\\xf3teles y acabando en Xenofonte y en Zo\\xedlo o\u0027, u\u0027Zeuxis, aunque fue maldiciente el uno y pintor el otro. Tambi\\xe9n ha de\u0027, u\u0027carecer mi libro de sonetos al principio, a lo menos de sonetos cuyos\u0027, u\u0027autores sean duques, marqueses, condes, obispos, damas o poetas\u0027, u\u0027celeb\\xe9rrimos; aunque, si yo los pidiese a dos o tres oficiales amigos, yo\u0027, u\u0027s\\xe9 que me los dar\\xedan, y tales, que no les igualasen los de aquellos que\u0027, u\u0027tienen m\\xe1s nombre en nuestra Espa\\xf1a. En fin, se\\xf1or y amigo m\\xedo -prosegu\\xed-,\u0027, u\u0027yo determino que el se\\xf1or don Quijote se quede sepultado en sus archivos en\u0027, u\u0027la Mancha, hasta que el cielo depare quien le adorne de tantas cosas como\u0027, u\u0027le faltan; porque yo me hallo incapaz de remediarlas, por mi insuficiencia\u0027, u\u0027y pocas letras, y porque naturalmente soy poltr\\xf3n y perezoso de andarme\u0027, u\u0027buscando autores que digan lo que yo me s\\xe9 decir sin ellos. De aqu\\xed nace la\u0027, u\u0027suspensi\\xf3n y elevamiento, amigo, en que me hallastes; bastante causa para\u0027, u\u0027ponerme en ella la que de m\\xed hab\\xe9is o\\xeddo.\u0027, u\u0027\u0027, u\u0027Oyendo lo cual mi amigo, d\\xe1ndose una palmada en la frente y disparando en\u0027, u\u0027una carga de risa, me dijo:\u0027, u\u0027\u0027, u\u0027-Por Dios, hermano, que agora me acabo de desenga\\xf1ar de un enga\\xf1o en que he\u0027, u\u0027estado todo el mucho tiempo que ha que os conozco, en el cual siempre os he\u0027, u\u0027tenido por discreto y prudente en todas vuestras aciones. Pero agora veo\u0027, u\u0027que est\\xe1is tan lejos de serlo como lo est\\xe1 el cielo de la tierra. \\xbfC\\xf3mo que\u0027, u\u0027es posible que cosas de tan poco momento y tan f\\xe1ciles de remediar puedan\u0027, u\u0027tener fuerzas de suspender y absortar un ingenio tan maduro como el\u0027, u\u0027vuestro, y tan hecho a romper y atropellar por otras dificultades mayores?\u0027, u\u0027A la fe, esto no nace de falta de habilidad, sino de sobra de pereza y\u0027, u\u0027penuria de discurso. \\xbfQuer\\xe9is ver si es verdad lo que digo? Pues estadme\u0027, u\u0027atento y ver\\xe9is c\\xf3mo, en un abrir y cerrar de ojos, confundo todas vuestras\u0027, u\u0027dificultades y remedio todas las faltas que dec\\xeds que os suspenden y\u0027, u\u0027acobardan para dejar de sacar a la luz del mundo la historia de vuestro\u0027, u\u0027famoso don Quijote, luz y espejo de toda la caballer\\xeda andante.\u0027, u\u0027\u0027, u\u0027-Decid -le repliqu\\xe9 yo, oyendo lo que me dec\\xeda-: \\xbfde qu\\xe9 modo pens\\xe1is\u0027, u\u0027llenar el vac\\xedo de mi temor y reducir a claridad el caos de mi confusi\\xf3n?\u0027, u\u0027\u0027, u\u0027A lo cual \\xe9l dijo:\u0027, u\u0027\u0027, u\u0027-Lo primero en que repar\\xe1is de los sonetos, epigramas o elogios que os\u0027, u\u0027faltan para el principio, y que sean de personajes graves y de t\\xedtulo, se\u0027, u\u0027puede remediar en que vos mesmo tom\\xe9is alg\\xfan trabajo en hacerlos, y despu\\xe9s\u0027, u\u0027los pod\\xe9is bautizar y poner el nombre que quisi\\xe9redes, ahij\\xe1ndolos al\u0027, u\u0027Preste Juan de las Indias o al Emperador de Trapisonda, de quien yo s\\xe9 que\u0027, u\u0027hay noticia que fueron famosos poetas; y cuando no lo hayan sido y hubiere\u0027, u\u0027algunos pedantes y bachilleres que por detr\\xe1s os muerdan y murmuren desta\u0027, u\u0027verdad, no se os d\\xe9 dos maraved\\xeds; porque, ya que os averig\\xfcen la mentira,\u0027, u\u0027no os han de cortar la mano con que lo escribistes.\u0027, u\u0027\u0027, u\u0027\\xbbEn lo de citar en las m\\xe1rgenes los libros y autores de donde sac\\xe1redes las\u0027, u\u0027sentencias y dichos que pusi\\xe9redes en vuestra historia, no hay m\\xe1s sino\u0027, u\u0027hacer, de manera que venga a pelo, algunas sentencias o latines que vos\u0027, u\u0027sep\\xe1is de memoria, o, a lo menos, que os cuesten poco trabajo el buscalle;\u0027, u\u0027como ser\\xe1 poner, tratando de libertad y cautiverio:\u0027, u\u0027\u0027, u\u0027   Non bene pro toto libertas venditur auro.\u0027, u\u0027\u0027, u\u0027Y luego, en el margen, citar a Horacio, o a quien lo dijo. Si trat\\xe1redes\u0027, u\u0027del poder de la muerte, acudir luego con:\u0027, u\u0027\u0027, u\u0027   Pallida mors aequo pulsat pede pauperum tabernas,\u0027, u\u0027   Regumque turres.\u0027, u\u0027\u0027, u\u0027Si de la amistad y amor que Dios manda que se tenga al enemigo, entraros\u0027, u\u0027luego al punto por la Escritura Divina, que lo pod\\xe9is hacer con tantico de\u0027, u\u0027curiosidad, y decir las palabras, por lo menos, del mismo Dios: Ego autem\u0027, u\u0027dico vobis: diligite inimicos vestros. Si trat\\xe1redes de malos pensamientos,\u0027, u\u0027acudid con el Evangelio: De corde exeunt cogitationes malae. Si de la\u0027, u\u0027instabilidad de los amigos, ah\\xed est\\xe1 Cat\\xf3n, que os dar\\xe1 su d\\xedstico:\u0027, u\u0027\u0027, u\u0027   Donec eris felix, multos numerabis amicos,\u0027, u\u0027   tempora si fuerint nubila, solus eris.\u0027, u\u0027\u0027, u\u0027Y con estos latinicos y otros tales os tendr\\xe1n siquiera por gram\\xe1tico, que\u0027, u\u0027el serlo no es de poca honra y provecho el d\\xeda de hoy.\u0027, u\u0027\u0027, u\u0027\\xbbEn lo que toca el poner anotaciones al fin del libro, seguramente lo\u0027, u\u0027pod\\xe9is hacer desta manera: si nombr\\xe1is alg\\xfan gigante en vuestro libro,\u0027, u\u0027hacelde que sea el gigante Gol\\xedas, y con s\\xf3lo esto, que os costar\\xe1 casi\u0027, u\u0027nada, ten\\xe9is una grande anotaci\\xf3n, pues pod\\xe9is poner: El gigante Gol\\xedas, o\u0027, u\u0027Goliat, fue un filisteo a quien el pastor David mat\\xf3 de una gran pedrada en\u0027, u\u0027el valle de Terebinto, seg\\xfan se cuenta en el Libro de los Reyes, en el\u0027, u\u0027cap\\xedtulo que vos hall\\xe1redes que se escribe. Tras esto, para mostraros\u0027, u\u0027hombre erudito en letras humanas y cosm\\xf3grafo, haced de modo como en\u0027, u\u0027vuestra historia se nombre el r\\xedo Tajo, y ver\\xe9isos luego con otra famosa\u0027, u\u0027anotaci\\xf3n, poniendo: El r\\xedo Tajo fue as\\xed dicho por un rey de las Espa\\xf1as;\u0027, u\u0027tiene su nacimiento en tal lugar y muere en el mar oc\\xe9ano, besando los\u0027, u\u0027muros de la famosa ciudad de Lisboa; y es opini\\xf3n que tiene las arenas de\u0027, u\u0027oro, etc. Si trat\\xe1redes de ladrones, yo os dir\\xe9 la historia de Caco, que la\u0027, u\u0027s\\xe9 de coro; si de mujeres rameras, ah\\xed est\\xe1 el obispo de Mondo\\xf1edo, que os\u0027, u\u0027prestar\\xe1 a Lamia, Laida y Flora, cuya anotaci\\xf3n os dar\\xe1 gran cr\\xe9dito; si de\u0027, u\u0027crueles, Ovidio os entregar\\xe1 a Medea; si de encantadores y hechiceras,\u0027, u\u0027Homero tiene a Calipso, y Virgilio a Circe; si de capitanes valerosos, el\u0027, u\u0027mesmo Julio C\\xe9sar os prestar\\xe1 a s\\xed mismo en sus Comentarios, y Plutarco os\u0027, u\u0027dar\\xe1 mil Alejandros. Si trat\\xe1redes de amores, con dos onzas que sep\\xe1is de\u0027, u\u0027la lengua toscana, topar\\xe9is con Le\\xf3n Hebreo, que os hincha las medidas. Y\u0027, u\u0027si no quer\\xe9is andaros por tierras extra\\xf1as, en vuestra casa ten\\xe9is a\u0027, u\u0027Fonseca, Del amor de Dios, donde se cifra todo lo que vos y el m\\xe1s\u0027, u\u0027ingenioso acertare a desear en tal materia. En resoluci\\xf3n, no hay m\\xe1s sino\u0027, u\u0027que vos procur\\xe9is nombrar estos nombres, o tocar estas historias en la\u0027, u\u0027vuestra, que aqu\\xed he dicho, y dejadme a m\\xed el cargo de poner las\u0027, u\u0027anotaciones y acotaciones; que yo os voto a tal de llenaros las m\\xe1rgenes y\u0027, u\u0027de gastar cuatro pliegos en el fin del libro.\u0027, u\u0027\u0027, u\u0027\\xbbVengamos ahora a la citaci\\xf3n de los autores que los otros libros tienen,\u0027, u\u0027que en el vuestro os faltan. El remedio que esto tiene es muy f\\xe1cil, porque\u0027, u\u0027no hab\\xe9is de hacer otra cosa que buscar un libro que los acote todos, desde\u0027, u\u0027la A hasta la Z, como vos dec\\xeds. Pues ese mismo abecedario pondr\\xe9is vos en\u0027, u\u0027vuestro libro; que, puesto que a la clara se vea la mentira, por la poca\u0027, u\u0027necesidad que vos ten\\xedades de aprovecharos dellos, no importa nada; y quiz\\xe1\u0027, u\u0027alguno habr\\xe1 tan simple, que crea que de todos os hab\\xe9is aprovechado en la\u0027, u\u0027simple y sencilla historia vuestra; y, cuando no sirva de otra cosa, por lo\u0027, u\u0027menos servir\\xe1 aquel largo cat\\xe1logo de autores a dar de improviso autoridad\u0027, u\u0027al libro. Y m\\xe1s, que no habr\\xe1 quien se ponga a averiguar si los seguistes o\u0027, u\u0027no los seguistes, no y\\xe9ndole nada en ello. Cuanto m\\xe1s que, si bien caigo en\u0027, u\u0027la cuenta, este vuestro libro no tiene necesidad de ninguna cosa de\u0027, u\u0027aquellas que vos dec\\xeds que le falta, porque todo \\xe9l es una invectiva contra\u0027, u\u0027los libros de caballer\\xedas, de quien nunca se acord\\xf3 Arist\\xf3teles, ni dijo\u0027, u\u0027nada San Basilio, ni alcanz\\xf3 Cicer\\xf3n; ni caen debajo de la cuenta de sus\u0027, u\u0027fabulosos disparates las puntualidades de la verdad, ni las observaciones\u0027, u\u0027de la astrolog\\xeda; ni le son de importancia las medidas geom\\xe9tricas, ni la\u0027, u\u0027confutaci\\xf3n de los argumentos de quien se sirve la ret\\xf3rica; ni tiene para\u0027, u\u0027qu\\xe9 predicar a ninguno, mezclando lo humano con lo divino, que es un g\\xe9nero\u0027, u\u0027de mezcla de quien no se ha de vestir ning\\xfan cristiano entendimiento. S\\xf3lo\u0027, u\u0027tiene que aprovecharse de la imitaci\\xf3n en lo que fuere escribiendo; que,\u0027, u\u0027cuanto ella fuere m\\xe1s perfecta, tanto mejor ser\\xe1 lo que se escribiere. Y,\u0027, u\u0027pues esta vuestra escritura no mira a m\\xe1s que a deshacer la autoridad y\u0027, u\u0027cabida que en el mundo y en el vulgo tienen los libros de caballer\\xedas, no\u0027, u\u0027hay para qu\\xe9 and\\xe9is mendigando sentencias de fil\\xf3sofos, consejos de la\u0027, u\u0027Divina Escritura, f\\xe1bulas de poetas, oraciones de ret\\xf3ricos, milagros de\u0027, u\u0027santos, sino procurar que a la llana, con palabras significantes, honestas\u0027, u\u0027y bien colocadas, salga vuestra oraci\\xf3n y per\\xedodo sonoro y festivo;\u0027, u\u0027pintando, en todo lo que alcanz\\xe1redes y fuere posible, vuestra intenci\\xf3n,\u0027, u\u0027dando a entender vuestros conceptos sin intricarlos y escurecerlos.\u0027, u\u0027Procurad tambi\\xe9n que, leyendo vuestra historia, el melanc\\xf3lico se mueva a\u0027, u\u0027risa, el risue\\xf1o la acreciente, el simple no se enfade, el discreto se\u0027, u\u0027admire de la invenci\\xf3n, el grave no la desprecie, ni el prudente deje de\u0027, u\u0027alabarla. En efecto, llevad la mira puesta a derribar la m\\xe1quina mal\u0027, u\u0027fundada destos caballerescos libros, aborrecidos de tantos y alabados de\u0027, u\u0027muchos m\\xe1s; que si esto alcanz\\xe1sedes, no habr\\xedades alcanzado poco.\u0027, u\u0027\u0027, u\u0027Con silencio grande estuve escuchando lo que mi amigo me dec\\xeda, y de tal\u0027, u\u0027manera se imprimieron en m\\xed sus razones que, sin ponerlas en disputa, las\u0027, u\u0027aprob\\xe9 por buenas y de ellas mismas quise hacer este pr\\xf3logo; en el cual\u0027, u\u0027ver\\xe1s, lector suave, la discreci\\xf3n de mi amigo, la buena ventura m\\xeda en\u0027, u\u0027hallar en tiempo tan necesitado tal consejero, y el alivio tuyo en hallar\u0027, u\u0027tan sincera y tan sin revueltas la historia del famoso don Quijote de la\u0027, u\u0027Mancha, de quien hay opini\\xf3n, por todos los habitadores del distrito del\u0027, u\u0027campo de Montiel, que fue el m\\xe1s casto enamorado y el m\\xe1s valiente\u0027, u\u0027caballero que de muchos a\\xf1os a esta parte se vio en aquellos contornos. Yo\u0027, u\u0027no quiero encarecerte el servicio que te hago en darte a conocer tan noble\u0027, u\u0027y tan honrado caballero, pero quiero que me agradezcas el conocimiento que\u0027, u\u0027tendr\\xe1s del famoso Sancho Panza, su escudero, en quien, a mi parecer, te\u0027, u\u0027doy cifradas todas las gracias escuderiles que en la caterva de los libros\u0027, u\u0027vanos de caballer\\xedas est\\xe1n esparcidas.\u0027, u\u0027\u0027, u\u0027Y con esto, Dios te d\\xe9 salud, y a m\\xed no olvide. Vale.\u0027, u\u0027\u0027, u\u0027AL LIBRO DE DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027   Urganda la desconocida\u0027, u\u0027   Si de llegarte a los bue-,\u0027, u\u0027   libro, fueres con letu-,\u0027, u\u0027   no te dir\\xe1 el boquirru-\u0027, u\u0027   que no pones bien los de-.\u0027, u\u0027   Mas si el pan no se te cue-\u0027, u\u0027   por ir a manos de idio-,\u0027, u\u0027   ver\\xe1s de manos a bo-,\u0027, u\u0027   aun no dar una en el cla-,\u0027, u\u0027   si bien se comen las ma-\u0027, u\u0027   por mostrar que son curio-.\u0027, u\u0027   Y, pues la expiriencia ense-\u0027, u\u0027   que el que a buen \\xe1rbol se arri-\u0027, u\u0027   buena sombra le cobi-,\u0027, u\u0027   en B\\xe9jar tu buena estre-\u0027, u\u0027   un \\xe1rbol real te ofre-\u0027, u\u0027   que da pr\\xedncipes por fru-,\u0027, u\u0027   en el cual floreci\\xf3 un du-\u0027, u\u0027   que es nuevo Alejandro Ma-:\u0027, u\u0027   llega a su sombra, que a osa-\u0027, u\u0027   favorece la fortu-.\u0027, u\u0027   De un noble hidalgo manche-\u0027, u\u0027   contar\\xe1s las aventu-,\u0027, u\u0027   a quien ociosas letu-,\u0027, u\u0027   trastornaron la cabe-:\u0027, u\u0027   damas, armas, caballe-,\u0027, u\u0027   le provocaron de mo-,\u0027, u\u0027   que, cual Orlando furio-,\u0027, u\u0027   templado a lo enamora-,\u0027, u\u0027   alcanz\\xf3 a fuerza de bra-\u0027, u\u0027   a Dulcinea del Tobo-.\u0027, u\u0027   No indiscretos hierogl\\xed-\u0027, u\u0027   estampes en el escu-,\u0027, u\u0027   que, cuando es todo figu-,\u0027, u\u0027   con ruines puntos se envi-.\u0027, u\u0027   Si en la direcci\\xf3n te humi-,\u0027, u\u0027\u0027, u\u0027   no dir\\xe1, mofante, algu-:\u0027, u\"   \u0027\u0027\\xa1Qu\\xe9 don \\xc1lvaro de Lu-,\", u\u0027   qu\\xe9 Anibal el de Carta-,\u0027, u\u0027   qu\\xe9 rey Francisco en Espa-\u0027, u\"   se queja de la Fortu-!\u0027\u0027\", u\u0027   Pues al cielo no le plu-\u0027, u\u0027   que salieses tan ladi-\u0027, u\u0027   como el negro Juan Lati-,\u0027, u\u0027   hablar latines reh\\xfa-.\u0027, u\u0027   No me despuntes de agu-,\u0027, u\u0027   ni me alegues con fil\\xf3-,\u0027, u\u0027   porque, torciendo la bo-,\u0027, u\u0027   dir\\xe1 el que entiende la le-,\u0027, u\u0027   no un palmo de las ore-:\u0027, u\"   \u0027\u0027\\xbfPara qu\\xe9 conmigo flo-?\u0027\u0027\", u\u0027   No te metas en dibu-,\u0027, u\u0027   ni en saber vidas aje-,\u0027, u\u0027   que, en lo que no va ni vie-,\u0027, u\u0027\u0027, u\u0027   pasar de largo es cordu-.\u0027, u\u0027   Que suelen en caperu-\u0027, u\u0027   darles a los que grace-;\u0027, u\u0027   mas t\\xfa qu\\xe9mate las ce-\u0027, u\u0027   s\\xf3lo en cobrar buena fa-;\u0027, u\u0027   que el que imprime neceda-\u0027, u\u0027   dalas a censo perpe-.\u0027, u\u0027   Advierte que es desati-,\u0027, u\u0027   siendo de vidrio el teja-,\u0027, u\u0027   tomar piedras en las ma-\u0027, u\u0027   para tirar al veci-.\u0027, u\u0027   Deja que el hombre de jui-,\u0027, u\u0027   en las obras que compo-,\u0027, u\u0027   se vaya con pies de plo-;\u0027, u\u0027   que el que saca a luz pape-\u0027, u\u0027   para entretener donce-\u0027, u\u0027   escribe a tontas y a lo-.\u0027, u\u0027\u0027, u\u0027AMAD\\xcdS DE GAULA A DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   T\\xfa, que imitaste la llorosa vida\u0027, u\u0027   que tuve, ausente y desde\\xf1ado sobre\u0027, u\u0027   el gran ribazo de la Pe\\xf1a Pobre,\u0027, u\u0027   de alegre a penitencia reducida;\u0027, u\u0027   t\\xfa, a quien los ojos dieron la bebida\u0027, u\u0027   de abundante licor, aunque salobre,\u0027, u\u0027   y alz\\xe1ndote la plata, esta\\xf1o y cobre,\u0027, u\u0027   te dio la tierra en tierra la comida,\u0027, u\u0027   vive seguro de que eternamente,\u0027, u\u0027   en tanto, al menos, que en la cuarta esfera,\u0027, u\u0027   sus caballos aguije el rubio Apolo,\u0027, u\u0027   tendr\\xe1s claro renombre de valiente;\u0027, u\u0027   tu patria ser\\xe1 en todas la primera;\u0027, u\u0027   tu sabio autor, al mundo \\xfanico y solo.\u0027, u\u0027\u0027, u\u0027DON BELIAN\\xcdS DE GRECIA A DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   Romp\\xed, cort\\xe9, aboll\\xe9, y dije y hice\u0027, u\u0027   m\\xe1s que en el orbe caballero andante;\u0027, u\u0027   fui diestro, fui valiente, fui arrogante;\u0027, u\u0027   mil agravios vengu\\xe9, cien mil deshice.\u0027, u\u0027   Haza\\xf1as di a la Fama que eternice;\u0027, u\u0027   fui comedido y regalado amante;\u0027, u\u0027   fue enano para m\\xed todo gigante,\u0027, u\u0027   y al duelo en cualquier punto satisfice.\u0027, u\u0027   Tuve a mis pies postrada la Fortuna,\u0027, u\u0027   y trajo del copete mi cordura\u0027, u\u0027   a la calva Ocasi\\xf3n al estricote.\u0027, u\u0027   M\\xe1s, aunque sobre el cuerno de la luna\u0027, u\u0027   siempre se vio encumbrada mi ventura,\u0027, u\u0027   tus proezas envidio, \\xa1oh gran Quijote!\u0027, u\u0027\u0027, u\u0027LA SE\\xd1ORA ORIANA A DULCINEA DEL TOBOSO\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   \\xa1Oh, qui\\xe9n tuviera, hermosa Dulcinea,\u0027, u\u0027   por m\\xe1s comodidad y m\\xe1s reposo,\u0027, u\u0027   a Miraflores puesto en el Toboso,\u0027, u\u0027   y trocara sus Londres con tu aldea!\u0027, u\u0027   \\xa1Oh, qui\\xe9n de tus deseos y librea\u0027, u\u0027   alma y cuerpo adornara, y del famoso\u0027, u\u0027   caballero que hiciste venturoso\u0027, u\u0027   mirara alguna desigual pelea!\u0027, u\u0027   \\xa1Oh, qui\\xe9n tan castamente se escapara\u0027, u\u0027   del se\\xf1or Amad\\xeds como t\\xfa hiciste\u0027, u\u0027   del comedido hidalgo don Quijote!\u0027, u\u0027   Que as\\xed envidiada fuera, y no envidiara,\u0027, u\u0027   y fuera alegre el tiempo que fue triste,\u0027, u\u0027   y gozara los gustos sin escote.\u0027, u\u0027\u0027, u\u0027GANDAL\\xcdN, ESCUDERO DE AMAD\\xcdS DE GAULA, A SANCHO PANZA, ESCUDERO DE DON QUIJOTE\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   Salve, var\\xf3n famoso, a quien Fortuna,\u0027, u\u0027   cuando en el trato escuderil te puso,\u0027, u\u0027   tan blanda y cuerdamente lo dispuso,\u0027, u\u0027   que lo pasaste sin desgracia alguna.\u0027, u\u0027   Ya la azada o la hoz poco repugna\u0027, u\u0027   al andante ejercicio; ya est\\xe1 en uso\u0027, u\u0027   la llaneza escudera, con que acuso\u0027, u\u0027   al soberbio que intenta hollar la luna.\u0027, u\u0027   Envidio a tu jumento y a tu nombre,\u0027, u\u0027   y a tus alforjas igualmente invidio,\u0027, u\u0027   que mostraron tu cuerda providencia.\u0027, u\u0027   Salve otra vez, \\xa1oh Sancho!, tan buen hombre,\u0027, u\u0027   que a solo t\\xfa nuestro espa\\xf1ol Ovidio\u0027, u\u0027   con buzcorona te hace reverencia.\u0027, u\u0027\u0027, u\u0027DEL DONOSO, POETA ENTREVERADO, A SANCHO PANZA Y ROCINANTE\u0027, u\u0027\u0027, u\u0027   Soy Sancho Panza, escude-\u0027, u\u0027   del manchego don Quijo-.\u0027, u\u0027   Puse pies en polvoro-,\u0027, u\u0027   por vivir a lo discre-;\u0027, u\u0027   que el t\\xe1cito Villadie-\u0027, u\u0027   toda su raz\\xf3n de esta-\u0027, u\u0027   cifr\\xf3 en una retira-,\u0027, u\u0027   seg\\xfan siente Celesti-,\u0027, u\u0027   libro, en mi opini\\xf3n, divi-\u0027, u\u0027   si encubriera m\\xe1s lo huma-.\u0027, u\u0027   A Rocinante\u0027, u\u0027   Soy Rocinante, el famo-\u0027, u\u0027   bisnieto del gran Babie-.\u0027, u\u0027   Por pecados de flaque-,\u0027, u\u0027   fui a poder de un don Quijo-.\u0027, u\u0027   Parejas corr\\xed a lo flo-;\u0027, u\u0027   mas, por u\\xf1a de caba-,\u0027, u\u0027   no se me escap\\xf3 ceba-;\u0027, u\u0027   que esto saqu\\xe9 a Lazari-\u0027, u\u0027   cuando, para hurtar el vi-\u0027, u\u0027   al ciego, le di la pa-.\u0027, u\u0027\u0027, u\u0027ORLANDO FURIOSO A DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   Si no eres par, tampoco le has tenido:\u0027, u\u0027   que par pudieras ser entre mil pares;\u0027, u\u0027   ni puede haberle donde t\\xfa te hallares,\u0027, u\u0027   invito vencedor, jam\\xe1s vencido.\u0027, u\u0027   Orlando soy, Quijote, que, perdido\u0027, u\u0027   por Ang\\xe9lica, vi remotos mares,\u0027, u\u0027   ofreciendo a la Fama en sus altares\u0027, u\u0027   aquel valor que respet\\xf3 el olvido.\u0027, u\u0027   No puedo ser tu igual; que este decoro\u0027, u\u0027   se debe a tus proezas y a tu fama,\u0027, u\u0027   puesto que, como yo, perdiste el seso.\u0027, u\u0027   Mas serlo has m\\xedo, si al soberbio moro\u0027, u\u0027   y cita fiero domas, que hoy nos llama\u0027, u\u0027   iguales en amor con mal suceso.\u0027, u\u0027\u0027, u\u0027EL CABALLERO DEL FEBO A DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   A vuestra espada no igual\\xf3 la m\\xeda,\u0027, u\u0027   Febo espa\\xf1ol, curioso cortesano,\u0027, u\u0027   ni a la alta gloria de valor mi mano,\u0027, u\u0027   que rayo fue do nace y muere el d\\xeda.\u0027, u\u0027   Imperios despreci\\xe9; la monarqu\\xeda\u0027, u\u0027   que me ofreci\\xf3 el Oriente rojo en vano\u0027, u\u0027   dej\\xe9, por ver el rostro soberano\u0027, u\u0027   de Claridiana, aurora hermosa m\\xeda.\u0027, u\u0027   Am\\xe9la por milagro \\xfanico y raro,\u0027, u\u0027   y, ausente en su desgracia, el propio infierno\u0027, u\u0027   temi\\xf3 mi brazo, que dom\\xf3 su rabia.\u0027, u\u0027   Mas vos, godo Quijote, ilustre y claro,\u0027, u\u0027   por Dulcinea sois al mundo eterno,\u0027, u\u0027   y ella, por vos, famosa, honesta y sabia.\u0027, u\u0027\u0027, u\u0027DE SOLISD\\xc1N A DON QUIJOTE DE LA MANCHA\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   Maguer, se\\xf1or Quijote, que sandeces\u0027, u\u0027   vos tengan el cerbelo derrumbado,\u0027, u\u0027   nunca ser\\xe9is de alguno reprochado\u0027, u\u0027   por home de obras viles y soeces.\u0027, u\u0027   Ser\\xe1n vuesas faza\\xf1as los joeces,\u0027, u\u0027   pues tuertos desfaciendo hab\\xe9is andado,\u0027, u\u0027   siendo vegadas mil apaleado\u0027, u\u0027   por follones cautivos y raheces.\u0027, u\u0027   Y si la vuesa linda Dulcinea\u0027, u\u0027   desaguisado contra vos comete,\u0027, u\u0027   ni a vuesas cuitas muestra buen talante,\u0027, u\u0027   en tal desm\\xe1n, vueso conorte sea\u0027, u\u0027   que Sancho Panza fue mal alcag\\xfcete,\u0027, u\u0027   necio \\xe9l, dura ella, y vos no amante.\u0027, u\u0027\u0027, u\u0027DI\\xc1LOGO ENTRE BABIECA Y ROCINANTE\u0027, u\u0027\u0027, u\u0027Soneto\u0027, u\u0027\u0027, u\u0027   B. \\xbfC\\xf3mo est\\xe1is, Rocinante, tan delgado?\u0027, u\u0027   R. Porque nunca se come, y se trabaja.\u0027, u\u0027   B. Pues, \\xbfqu\\xe9 es de la cebada y de la paja?\u0027, u\u0027   R. No me deja mi amo ni un bocado.\u0027, u\u0027   B. And\\xe1, se\\xf1or, que est\\xe1is muy mal criado,\u0027, u\u0027   pues vuestra lengua de asno al amo ultraja.\u0027, u\u0027   R. Asno se es de la cuna a la mortaja.\u0027, u\u0027   \\xbfQuer\\xe9islo ver? Miraldo enamorado.\u0027, u\u0027   B. \\xbfEs necedad amar? R. No es gran prudencia.\u0027, u\u0027   B. Metaf\\xedsico est\\xe1is. R. Es que no como.\u0027, u\u0027   B. Quejaos del escudero. R. No es bastante.\u0027, u\u0027   \\xbfC\\xf3mo me he de quejar en mi dolencia,\u0027, u\u0027   si el amo y escudero o mayordomo\u0027, u\u0027   son tan rocines como Rocinante?\u0027, u\u0027\u0027, u\u0027Primera parte del ingenioso hidalgo don Quijote de la Mancha\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Cap\\xedtulo primero. Que trata de la condici\\xf3n y ejercicio del famoso hidalgo\u0027, u\u0027don Quijote de la Mancha\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho\u0027, u\u0027tiempo que viv\\xeda un hidalgo de los de lanza en astillero, adarga antigua,\u0027, u\u0027roc\\xedn flaco y galgo corredor. Una olla de algo m\\xe1s vaca que carnero,\u0027, u\u0027salpic\\xf3n las m\\xe1s noches, duelos y quebrantos los s\\xe1bados, lantejas los\u0027, u\u0027viernes, alg\\xfan palomino de a\\xf1adidura los domingos, consum\\xedan las tres\u0027, u\u0027partes de su hacienda. El resto della conclu\\xedan sayo de velarte, calzas de\u0027, u\u0027velludo para las fiestas, con sus pantuflos de lo mesmo, y los d\\xedas de\u0027, u\u0027entresemana se honraba con su vellor\\xed de lo m\\xe1s fino. Ten\\xeda en su casa una\u0027, u\u0027ama que pasaba de los cuarenta, y una sobrina que no llegaba a los veinte,\u0027, u\u0027y un mozo de campo y plaza, que as\\xed ensillaba el roc\\xedn como tomaba la\u0027, u\u0027podadera. Frisaba la edad de nuestro hidalgo con los cincuenta a\\xf1os; era de\u0027, u\u0027complexi\\xf3n recia, seco de carnes, enjuto de rostro, gran madrugador y amigo\u0027, u\u0027de la caza. Quieren decir que ten\\xeda el sobrenombre de Quijada, o Quesada,\u0027, u\u0027que en esto hay alguna diferencia en los autores que deste caso escriben;\u0027, u\u0027aunque, por conjeturas veros\\xedmiles, se deja entender que se llamaba\u0027, u\u0027Quejana. Pero esto importa poco a nuestro cuento; basta que en la narraci\\xf3n\u0027, u\u0027d\\xe9l no se salga un punto de la verdad.\u0027, u\u0027\u0027, u\u0027Es, pues, de saber que este sobredicho hidalgo, los ratos que estaba\u0027, u\u0027ocioso, que eran los m\\xe1s del a\\xf1o, se daba a leer libros de caballer\\xedas, con\u0027, u\u0027tanta afici\\xf3n y gusto, que olvid\\xf3 casi de todo punto el ejercicio de la\u0027, u\u0027caza, y aun la administraci\\xf3n de su hacienda. Y lleg\\xf3 a tanto su curiosidad\u0027, u\u0027y desatino en esto, que vendi\\xf3 muchas hanegas de tierra de sembradura para\u0027, u\u0027comprar libros de caballer\\xedas en que leer, y as\\xed, llev\\xf3 a su casa todos\u0027, u\u0027cuantos pudo haber dellos; y de todos, ningunos le parec\\xedan tan bien como\u0027, u\u0027los que compuso el famoso Feliciano de Silva, porque la claridad de su\u0027, u\u0027prosa y aquellas entricadas razones suyas le parec\\xedan de perlas, y m\\xe1s\u0027, u\u0027cuando llegaba a leer aquellos requiebros y cartas de desaf\\xedos, donde en\u0027, u\u0027muchas partes hallaba escrito: La raz\\xf3n de la sinraz\\xf3n que a mi raz\\xf3n se\u0027, u\u0027hace, de tal manera mi raz\\xf3n enflaquece, que con raz\\xf3n me quejo de la\u0027, u\u0027vuestra fermosura. Y tambi\\xe9n cuando le\\xeda: ...los altos cielos que de\u0027, u\u0027vuestra divinidad divinamente con las estrellas os fortifican, y os hacen\u0027, u\u0027merecedora del merecimiento que merece la vuestra grandeza.\u0027, u\u0027\u0027, u\u0027Con estas razones perd\\xeda el pobre caballero el juicio, y desvel\\xe1base por\u0027, u\u0027entenderlas y desentra\\xf1arles el sentido, que no se lo sacara ni las\u0027, u\u0027entendiera el mesmo Arist\\xf3teles, si resucitara para s\\xf3lo ello. No estaba\u0027, u\u0027muy bien con las heridas que don Belian\\xeds daba y receb\\xeda, porque se\u0027, u\u0027imaginaba que, por grandes maestros que le hubiesen curado, no dejar\\xeda de\u0027, u\u0027tener el rostro y todo el cuerpo lleno de cicatrices y se\\xf1ales. Pero, con\u0027, u\u0027todo, alababa en su autor aquel acabar su libro con la promesa de aquella\u0027, u\u0027inacabable aventura, y muchas veces le vino deseo de tomar la pluma y dalle\u0027, u\u0027fin al pie de la letra, como all\\xed se promete; y sin duda alguna lo hiciera,\u0027, u\u0027y aun saliera con ello, si otros mayores y continuos pensamientos no se lo\u0027, u\u0027estorbaran. Tuvo muchas veces competencia con el cura de su lugar -que era\u0027, u\u0027hombre docto, graduado en Sig\\xfcenza-, sobre cu\\xe1l hab\\xeda sido mejor caballero:\u0027, u\u0027Palmer\\xedn de Ingalaterra o Amad\\xeds de Gaula; mas maese Nicol\\xe1s, barbero del\u0027, u\u0027mesmo pueblo, dec\\xeda que ninguno llegaba al Caballero del Febo, y que si\u0027, u\u0027alguno se le pod\\xeda comparar, era don Galaor, hermano de Amad\\xeds de Gaula,\u0027, u\u0027porque ten\\xeda muy acomodada condici\\xf3n para todo; que no era caballero\u0027, u\u0027melindroso, ni tan llor\\xf3n como su hermano, y que en lo de la valent\\xeda no le\u0027, u\u0027iba en zaga.\u0027, u\u0027\u0027, u\u0027En resoluci\\xf3n, \\xe9l se enfrasc\\xf3 tanto en su letura, que se le pasaban las\u0027, u\u0027noches leyendo de claro en claro, y los d\\xedas de turbio en turbio; y as\\xed,\u0027, u\u0027del poco dormir y del mucho leer, se le sec\\xf3 el celebro, de manera que vino\u0027, u\u0027a perder el juicio. Llen\\xf3sele la fantas\\xeda de todo aquello que le\\xeda en los\u0027, u\u0027libros, as\\xed de encantamentos como de pendencias, batallas, desaf\\xedos,\u0027, u\u0027heridas, requiebros, amores, tormentas y disparates imposibles; y\u0027, u\u0027asent\\xf3sele de tal modo en la imaginaci\\xf3n que era verdad toda aquella\u0027, u\u0027m\\xe1quina de aquellas sonadas so\\xf1adas invenciones que le\\xeda, que para \\xe9l no\u0027, u\u0027hab\\xeda otra historia m\\xe1s cierta en el mundo. Dec\\xeda \\xe9l que el Cid Ruy D\\xedaz\u0027, u\u0027hab\\xeda sido muy buen caballero, pero que no ten\\xeda que ver con el Caballero\u0027, u\u0027de la Ardiente Espada, que de s\\xf3lo un rev\\xe9s hab\\xeda partido por medio dos\u0027, u\u0027fieros y descomunales gigantes. Mejor estaba con Bernardo del Carpio,\u0027, u\u0027porque en Roncesvalles hab\\xeda muerto a Rold\\xe1n el encantado, vali\\xe9ndose de la\u0027, u\u0027industria de H\\xe9rcules, cuando ahog\\xf3 a Anteo, el hijo de la Tierra, entre\u0027, u\u0027los brazos. Dec\\xeda mucho bien del gigante Morgante, porque, con ser de\u0027, u\u0027aquella generaci\\xf3n gigantea, que todos son soberbios y descomedidos, \\xe9l\u0027, u\u0027solo era afable y bien criado. Pero, sobre todos, estaba bien con Reinaldos\u0027, u\u0027de Montalb\\xe1n, y m\\xe1s cuando le ve\\xeda salir de su castillo y robar cuantos\u0027, u\u0027topaba, y cuando en allende rob\\xf3 aquel \\xeddolo de Mahoma que era todo de oro,\u0027, u\u0027seg\\xfan dice su historia. Diera \\xe9l, por dar una mano de coces al traidor de\u0027, u\u0027Galal\\xf3n, al ama que ten\\xeda, y aun a su sobrina de a\\xf1adidura.\u0027, u\u0027\u0027, u\u0027En efeto, rematado ya su juicio, vino a dar en el m\\xe1s estra\\xf1o pensamiento\u0027, u\u0027que jam\\xe1s dio loco en el mundo; y fue que le pareci\\xf3 convenible y\u0027, u\u0027necesario, as\\xed para el aumento de su honra como para el servicio de su\u0027, u\u0027rep\\xfablica, hacerse caballero andante, y irse por todo el mundo con sus\u0027, u\u0027armas y caballo a buscar las aventuras y a ejercitarse en todo aquello que\u0027, u\u0027\\xe9l hab\\xeda le\\xeddo que los caballeros andantes se ejercitaban, deshaciendo todo\u0027, u\u0027g\\xe9nero de agravio, y poni\\xe9ndose en ocasiones y peligros donde, acab\\xe1ndolos,\u0027, u\u0027cobrase eterno nombre y fama. Imagin\\xe1base el pobre ya coronado por el valor\u0027, u\u0027de su brazo, por lo menos, del imperio de Trapisonda; y as\\xed, con estos tan\u0027, u\u0027agradables pensamientos, llevado del estra\\xf1o gusto que en ellos sent\\xeda, se\u0027, u\u0027dio priesa a poner en efeto lo que deseaba.\u0027, u\u0027\u0027, u\u0027Y lo primero que hizo fue limpiar unas armas que hab\\xedan sido de sus\u0027, u\u0027bisabuelos, que, tomadas de or\\xedn y llenas de moho, luengos siglos hab\\xeda que\u0027, u\u0027estaban puestas y olvidadas en un rinc\\xf3n. Limpi\\xf3las y aderez\\xf3las lo mejor\u0027, u\u0027que pudo, pero vio que ten\\xedan una gran falta, y era que no ten\\xedan celada de\u0027, u\u0027encaje, sino morri\\xf3n simple; mas a esto supli\\xf3 su industria, porque de\u0027, u\u0027cartones hizo un modo de media celada, que, encajada con el morri\\xf3n, hac\\xedan\u0027, u\u0027una apariencia de celada entera. Es verdad que para probar si era fuerte y\u0027, u\u0027pod\\xeda estar al riesgo de una cuchillada, sac\\xf3 su espada y le dio dos\u0027, u\u0027golpes, y con el primero y en un punto deshizo lo que hab\\xeda hecho en una\u0027, u\u0027semana; y no dej\\xf3 de parecerle mal la facilidad con que la hab\\xeda hecho\u0027, u\u0027pedazos, y, por asegurarse deste peligro, la torn\\xf3 a hacer de nuevo,\u0027, u\u0027poni\\xe9ndole unas barras de hierro por de dentro, de tal manera que \\xe9l qued\\xf3\u0027, u\u0027satisfecho de su fortaleza; y, sin querer hacer nueva experiencia della, la\u0027, u\u0027diput\\xf3 y tuvo por celada fin\\xedsima de encaje.\u0027, u\u0027\u0027, u\u0027Fue luego a ver su roc\\xedn, y, aunque ten\\xeda m\\xe1s cuartos que un real y m\\xe1s\u0027, u\u0027tachas que el caballo de Gonela, que tantum pellis et ossa fuit, le pareci\\xf3\u0027, u\u0027que ni el Buc\\xe9falo de Alejandro ni Babieca el del Cid con \\xe9l se igualaban.\u0027, u\u0027Cuatro d\\xedas se le pasaron en imaginar qu\\xe9 nombre le pondr\\xeda; porque, seg\\xfan\u0027, u\u0027se dec\\xeda \\xe9l a s\\xed mesmo, no era raz\\xf3n que caballo de caballero tan famoso, y\u0027, u\u0027tan bueno \\xe9l por s\\xed, estuviese sin nombre conocido; y ans\\xed, procuraba\u0027, u\u0027acomod\\xe1rsele de manera que declarase qui\\xe9n hab\\xeda sido, antes que fuese de\u0027, u\u0027caballero andante, y lo que era entonces; pues estaba muy puesto en raz\\xf3n\u0027, u\u0027que, mudando su se\\xf1or estado, mudase \\xe9l tambi\\xe9n el nombre, y le cobrase\u0027, u\u0027famoso y de estruendo, como conven\\xeda a la nueva orden y al nuevo ejercicio\u0027, u\u0027que ya profesaba. Y as\\xed, despu\\xe9s de muchos nombres que form\\xf3, borr\\xf3 y\u0027, u\u0027quit\\xf3, a\\xf1adi\\xf3, deshizo y torn\\xf3 a hacer en su memoria e imaginaci\\xf3n, al fin\u0027, u\u0027le vino a llamar Rocinante: nombre, a su parecer, alto, sonoro y\u0027, u\u0027significativo de lo que hab\\xeda sido cuando fue roc\\xedn, antes de lo que ahora\u0027, u\u0027era, que era antes y primero de todos los rocines del mundo.\u0027, u\u0027\u0027, u\u0027Puesto nombre, y tan a su gusto, a su caballo, quiso pon\\xe9rsele a s\\xed mismo,\u0027, u\u0027y en este pensamiento dur\\xf3 otros ocho d\\xedas, y al cabo se vino a llamar don\u0027, u\u0027Quijote; de donde -como queda dicho- tomaron ocasi\\xf3n los autores desta tan\u0027, u\u0027verdadera historia que, sin duda, se deb\\xeda de llamar Quijada, y no Quesada,\u0027, u\u0027como otros quisieron decir. Pero, acord\\xe1ndose que el valeroso Amad\\xeds no\u0027, u\u0027s\\xf3lo se hab\\xeda contentado con llamarse Amad\\xeds a secas, sino que a\\xf1adi\\xf3 el\u0027, u\u0027nombre de su reino y patria, por Hepila famosa, y se llam\\xf3 Amad\\xeds de Gaula,\u0027, u\u0027as\\xed quiso, como buen caballero, a\\xf1adir al suyo el nombre de la suya y\u0027, u\u0027llamarse don Quijote de la Mancha, con que, a su parecer, declaraba muy al\u0027, u\u0027vivo su linaje y patria, y la honraba con tomar el sobrenombre della.\u0027, u\u0027\u0027, u\u0027Limpias, pues, sus armas, hecho del morri\\xf3n celada, puesto nombre a su\u0027, u\u0027roc\\xedn y confirm\\xe1ndose a s\\xed mismo, se dio a entender que no le faltaba otra\u0027, u\u0027cosa sino buscar una dama de quien enamorarse; porque el caballero andante\u0027, u\u0027sin amores era \\xe1rbol sin hojas y sin fruto y cuerpo sin alma. Dec\\xedase \\xe9l\u0027, u\u0027a s\\xed:\u0027, u\u0027\u0027, u\u0027-Si yo, por malos de mis pecados, o por mi buena suerte, me encuentro por\u0027, u\u0027ah\\xed con alg\\xfan gigante, como de ordinario les acontece a los caballeros\u0027, u\u0027andantes, y le derribo de un encuentro, o le parto por mitad del cuerpo, o,\u0027, u\u0027finalmente, le venzo y le rindo, \\xbfno ser\\xe1 bien tener a quien enviarle\u0027, u\u0027presentado y que entre y se hinque de rodillas ante mi dulce se\\xf1ora, y diga\u0027, u\"con voz humilde y rendido: \u0027\u0027Yo, se\\xf1ora, soy el gigante Caraculiambro,\", u\u0027se\\xf1or de la \\xednsula Malindrania, a quien venci\\xf3 en singular batalla el\u0027, u\u0027jam\\xe1s como se debe alabado caballero don Quijote de la Mancha, el cual me\u0027, u\u0027mand\\xf3 que me presentase ante vuestra merced, para que la vuestra grandeza\u0027, u\"disponga de m\\xed a su talante\u0027\u0027?\", u\u0027\u0027, u\u0027\\xa1Oh, c\\xf3mo se holg\\xf3 nuestro buen caballero cuando hubo hecho este discurso,\u0027, u\u0027y m\\xe1s cuando hall\\xf3 a quien dar nombre de su dama! Y fue, a lo que se cree,\u0027, u\u0027que en un lugar cerca del suyo hab\\xeda una moza labradora de muy buen\u0027, u\u0027parecer, de quien \\xe9l un tiempo anduvo enamorado, aunque, seg\\xfan se entiende,\u0027, u\u0027ella jam\\xe1s lo supo, ni le dio cata dello. Llam\\xe1base Aldonza Lorenzo, y a\u0027, u\u0027\\xe9sta le pareci\\xf3 ser bien darle t\\xedtulo de se\\xf1ora de sus pensamientos; y,\u0027, u\u0027busc\\xe1ndole nombre que no desdijese mucho del suyo, y que tirase y se\u0027, u\u0027encaminase al de princesa y gran se\\xf1ora, vino a llamarla Dulcinea del\u0027, u\u0027Toboso, porque era natural del Toboso; nombre, a su parecer, m\\xfasico y\u0027, u\u0027peregrino y significativo, como todos los dem\\xe1s que a \\xe9l y a sus cosas\u0027, u\u0027hab\\xeda puesto.\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Cap\\xedtulo II. Que trata de la primera salida que de su tierra hizo el\u0027, u\u0027ingenioso don Quijote\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Hechas, pues, estas prevenciones, no quiso aguardar m\\xe1s tiempo a poner en\u0027, u\u0027efeto su pensamiento, apret\\xe1ndole a ello la falta que \\xe9l pensaba que hac\\xeda\u0027, u\u0027en el mundo su tardanza, seg\\xfan eran los agravios que pensaba deshacer,\u0027, u\u0027tuertos que enderezar, sinrazones que emendar, y abusos que mejorar y\u0027, u\u0027deudas que satisfacer. Y as\\xed, sin dar parte a persona alguna de su\u0027, u\u0027intenci\\xf3n, y sin que nadie le viese, una ma\\xf1ana, antes del d\\xeda, que era uno\u0027, u\u0027de los calurosos del mes de julio, se arm\\xf3 de todas sus armas, subi\\xf3 sobre\u0027, u\u0027Rocinante, puesta su mal compuesta celada, embraz\\xf3 su adarga, tom\\xf3 su\u0027, u\u0027lanza, y, por la puerta falsa de un corral, sali\\xf3 al campo con grand\\xedsimo\u0027, u\u0027contento y alborozo de ver con cu\\xe1nta facilidad hab\\xeda dado principio a su\u0027, u\u0027buen deseo. Mas, apenas se vio en el campo, cuando le asalt\\xf3 un pensamiento\u0027, u\u0027terrible, y tal, que por poco le hiciera dejar la comenzada empresa; y fue\u0027, u\u0027que le vino a la memoria que no era armado caballero, y que, conforme a ley\u0027, u\u0027de caballer\\xeda, ni pod\\xeda ni deb\\xeda tomar armas con ning\\xfan caballero; y,\u0027, u\u0027puesto que lo fuera, hab\\xeda de llevar armas blancas, como novel caballero,\u0027, u\u0027sin empresa en el escudo, hasta que por su esfuerzo la ganase. Estos\u0027, u\u0027pensamientos le hicieron titubear en su prop\\xf3sito; mas, pudiendo m\\xe1s su\u0027, u\u0027locura que otra raz\\xf3n alguna, propuso de hacerse armar caballero del\u0027, u\u0027primero que topase, a imitaci\\xf3n de otros muchos que as\\xed lo hicieron, seg\\xfan\u0027, u\u0027\\xe9l hab\\xeda le\\xeddo en los libros que tal le ten\\xedan. En lo de las armas blancas,\u0027, u\u0027pensaba limpiarlas de manera, en teniendo lugar, que lo fuesen m\\xe1s que un\u0027, u\u0027armi\\xf1o; y con esto se quiet\\xf3 y prosigui\\xf3 su camino, sin llevar otro que\u0027, u\u0027aquel que su caballo quer\\xeda, creyendo que en aquello consist\\xeda la fuerza de\u0027, u\u0027las aventuras.\u0027, u\u0027\u0027, u\u0027Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\u0027, u\u0027mesmo y diciendo:\u0027, u\u0027\u0027, u\u0027-\\xbfQui\\xe9n duda sino que en los venideros tiempos, cuando salga a luz la\u0027, u\u0027verdadera historia de mis famosos hechos, que el sabio que los escribiere\u0027, u\u0027no ponga, cuando llegue a contar esta mi primera salidad tan de ma\\xf1ana,\u0027, u\u0027desta manera?: \\xabApenas hab\\xeda el rubicundo Apolo tendido por la faz de la\u0027, u\u0027ancha y espaciosa tierra las doradas hebras de sus hermosos cabellos, y\u0027, u\u0027apenas los peque\\xf1os y pintados pajarillos con sus arpadas lenguas hab\\xedan\u0027, u\u0027saludado con dulce y meliflua armon\\xeda la venida de la rosada aurora, que,\u0027, u\u0027dejando la blanda cama del celoso marido, por las puertas y balcones del\u0027, u\u0027manchego horizonte a los mortales se mostraba, cuando el famoso caballero\u0027, u\u0027don Quijote de la Mancha, dejando las ociosas plumas, subi\\xf3 sobre su famoso\u0027, u\u0027caballo Rocinante, y comenz\\xf3 a caminar por el antiguo y conocido campo de\u0027, u\u0027Montiel\\xbb.\u0027, u\u0027\u0027, u\u0027Y era la verdad que por \\xe9l caminaba. Y a\\xf1adi\\xf3 diciendo:\u0027, u\u0027\u0027, u\u0027-Dichosa edad, y siglo dichoso aquel adonde saldr\\xe1n a luz las famosas\u0027, u\u0027haza\\xf1as m\\xedas, dignas de entallarse en bronces, esculpirse en m\\xe1rmoles y\u0027, u\u0027pintarse en tablas para memoria en lo futuro. \\xa1Oh t\\xfa, sabio encantador,\u0027, u\u0027quienquiera que seas, a quien ha de tocar el ser coronista desta peregrina\u0027, u\u0027historia, ru\\xe9gote que no te olvides de mi buen Rocinante, compa\\xf1ero eterno\u0027, u\u0027m\\xedo en todos mis caminos y carreras!\u0027, u\u0027\u0027, u\u0027Luego volv\\xeda diciendo, como si verdaderamente fuera enamorado:\u0027, u\u0027\u0027, u\u0027-\\xa1Oh princesa Dulcinea, se\\xf1ora deste cautivo coraz\\xf3n!, mucho agravio me\u0027, u\u0027habedes fecho en despedirme y reprocharme con el riguroso afincamiento de\u0027, u\u0027mandarme no parecer ante la vuestra fermosura. Pl\\xe9gaos, se\\xf1ora, de\u0027, u\u0027membraros deste vuestro sujeto coraz\\xf3n, que tantas cuitas por vuestro amor\u0027, u\u0027padece.\u0027, u\u0027\u0027, u\u0027Con \\xe9stos iba ensartando otros disparates, todos al modo de los que sus\u0027, u\u0027libros le hab\\xedan ense\\xf1ado, imitando en cuanto pod\\xeda su lenguaje. Con esto,\u0027, u\u0027caminaba tan despacio, y el sol entraba tan apriesa y con tanto ardor, que\u0027, u\u0027fuera bastante a derretirle los sesos, si algunos tuviera.\u0027, u\u0027\u0027, u\u0027Casi todo aquel d\\xeda camin\\xf3 sin acontecerle cosa que de contar fuese, de lo\u0027, u\u0027cual se desesperaba, porque quisiera topar luego luego con quien hacer\u0027, u\u0027experiencia del valor de su fuerte brazo. Autores hay que dicen que la\u0027, u\u0027primera aventura que le avino fue la del Puerto L\\xe1pice; otros dicen que la\u0027, u\u0027de los molinos de viento; pero, lo que yo he podido averiguar en este caso,\u0027, u\u0027y lo que he hallado escrito en los Anales de la Mancha, es que \\xe9l anduvo\u0027, u\u0027todo aquel d\\xeda, y, al anochecer, su roc\\xedn y \\xe9l se hallaron cansados y\u0027, u\u0027muertos de hambre; y que, mirando a todas partes por ver si descubrir\\xeda\u0027, u\u0027alg\\xfan castillo o alguna majada de pastores donde recogerse y adonde pudiese\u0027, u\u0027remediar su mucha hambre y necesidad, vio, no lejos del camino por donde\u0027, u\u0027iba, una venta, que fue como si viera una estrella que, no a los portales,\u0027, u\u0027sino a los alc\\xe1zares de su redenci\\xf3n le encaminaba. Diose priesa a caminar,\u0027, u\u0027y lleg\\xf3 a ella a tiempo que anochec\\xeda.\u0027, u\u0027\u0027, u\u0027Estaban acaso a la puerta dos mujeres mozas, destas que llaman del partido,\u0027, u\u0027las cuales iban a Sevilla con unos arrieros que en la venta aquella noche\u0027, u\u0027acertaron a hacer jornada; y, como a nuestro aventurero todo cuanto\u0027, u\u0027pensaba, ve\\xeda o imaginaba le parec\\xeda ser hecho y pasar al modo de lo que\u0027, u\u0027hab\\xeda le\\xeddo, luego que vio la venta, se le represent\\xf3 que era un castillo\u0027, u\u0027con sus cuatro torres y chapiteles de luciente plata, sin faltarle su\u0027, u\u0027puente levadiza y honda cava, con todos aquellos adherentes que semejantes\u0027, u\u0027castillos se pintan. Fuese llegando a la venta, que a \\xe9l le parec\\xeda\u0027, u\u0027castillo, y a poco trecho della detuvo las riendas a Rocinante, esperando\u0027, u\u0027que alg\\xfan enano se pusiese entre las almenas a dar se\\xf1al con alguna\u0027, u\u0027trompeta de que llegaba caballero al castillo. Pero, como vio que se\u0027, u\u0027tardaban y que Rocinante se daba priesa por llegar a la caballeriza, se\u0027, u\u0027lleg\\xf3 a la puerta de la venta, y vio a las dos destra\\xeddas mozas que all\\xed\u0027, u\u0027estaban, que a \\xe9l le parecieron dos hermosas doncellas o dos graciosas\u0027, u\u0027damas que delante de la puerta del castillo se estaban solazando. En esto,\u0027, u\u0027sucedi\\xf3 acaso que un porquero que andaba recogiendo de unos rastrojos una\u0027, u\u0027manada de puercos -que, sin perd\\xf3n, as\\xed se llaman- toc\\xf3 un cuerno, a cuya\u0027, u\u0027se\\xf1al ellos se recogen, y al instante se le represent\\xf3 a don Quijote lo que\u0027, u\u0027deseaba, que era que alg\\xfan enano hac\\xeda se\\xf1al de su venida; y as\\xed, con\u0027, u\u0027estra\\xf1o contento, lleg\\xf3 a la venta y a las damas, las cuales, como vieron\u0027, u\u0027venir un hombre de aquella suerte, armado y con lanza y adarga, llenas de\u0027, u\u0027miedo, se iban a entrar en la venta; pero don Quijote, coligiendo por su\u0027, u\u0027huida su miedo, alz\\xe1ndose la visera de papel\\xf3n y descubriendo su seco y\u0027, u\u0027polvoroso rostro, con gentil talante y voz reposada, les dijo:\u0027, u\u0027\u0027, u\u0027-No fuyan las vuestras mercedes ni teman desaguisado alguno; ca a la orden\u0027, u\u0027de caballer\\xeda que profeso non toca ni ata\\xf1e facerle a ninguno, cuanto m\\xe1s a\u0027, u\u0027tan altas doncellas como vuestras presencias demuestran.\u0027, u\u0027\u0027, u\u0027Mir\\xe1banle las mozas, y andaban con los ojos busc\\xe1ndole el rostro, que la\u0027, u\u0027mala visera le encubr\\xeda; mas, como se oyeron llamar doncellas, cosa tan\u0027, u\u0027fuera de su profesi\\xf3n, no pudieron tener la risa, y fue de manera que don\u0027, u\u0027Quijote vino a correrse y a decirles:\u0027, u\u0027\u0027, u\u0027-Bien parece la mesura en las fermosas, y es mucha sandez adem\\xe1s la risa\u0027, u\u0027que de leve causa procede; pero no vos lo digo porque os acuitedes ni\u0027, u\u0027mostredes mal talante; que el m\\xedo non es de \\xe1l que de serviros.\u0027, u\u0027\u0027, u\u0027El lenguaje, no entendido de las se\\xf1oras, y el mal talle de nuestro\u0027, u\u0027caballero acrecentaba en ellas la risa y en \\xe9l el enojo; y pasara muy\u0027, u\u0027adelante si a aquel punto no saliera el ventero, hombre que, por ser muy\u0027, u\u0027gordo, era muy pac\\xedfico, el cual, viendo aquella figura contrahecha, armada\u0027, u\u0027de armas tan desiguales como eran la brida, lanza, adarga y coselete, no\u0027, u\u0027estuvo en nada en acompa\\xf1ar a las doncellas en las muestras de su contento.\u0027, u\u0027Mas, en efeto, temiendo la m\\xe1quina de tantos pertrechos, determin\\xf3 de\u0027, u\u0027hablarle comedidamente; y as\\xed, le dijo:\u0027, u\u0027\u0027, u\u0027-Si vuestra merced, se\\xf1or caballero, busca posada, am\\xe9n del lecho (porque\u0027, u\u0027en esta venta no hay ninguno), todo lo dem\\xe1s se hallar\\xe1 en ella en mucha\u0027, u\u0027abundancia.\u0027, u\u0027\u0027, u\u0027Viendo don Quijote la humildad del alcaide de la fortaleza, que tal le\u0027, u\u0027pareci\\xf3 a \\xe9l el ventero y la venta, respondi\\xf3:\u0027, u\u0027\u0027, u\u0027   -Para m\\xed, se\\xf1or castellano, cualquiera cosa basta, porque\u0027, u\u0027   mis arreos son las armas,\u0027, u\u0027   mi descanso el pelear, etc.\u0027, u\u0027\u0027, u\u0027Pens\\xf3 el hu\\xe9sped que el haberle llamado castellano hab\\xeda sido por haberle\u0027, u\u0027parecido de los sanos de Castilla, aunque \\xe9l era andaluz, y de los de la\u0027, u\u0027playa de Sanl\\xfacar, no menos ladr\\xf3n que Caco, ni menos maleante que\u0027, u\u0027estudiantado paje; y as\\xed, le respondi\\xf3:\u0027, u\u0027\u0027, u\u0027-Seg\\xfan eso, las camas de vuestra merced ser\\xe1n duras pe\\xf1as, y su dormir,\u0027, u\u0027siempre velar; y siendo as\\xed, bien se puede apear, con seguridad de hallar\u0027, u\u0027en esta choza ocasi\\xf3n y ocasiones para no dormir en todo un a\\xf1o, cuanto m\\xe1s\u0027, u\u0027en una noche.\u0027, u\u0027\u0027, u\u0027Y, diciendo esto, fue a tener el estribo a don Quijote, el cual se ape\\xf3 con\u0027, u\u0027mucha dificultad y trabajo, como aquel que en todo aquel d\\xeda no se hab\\xeda\u0027, u\u0027desayunado.\u0027, u\u0027\u0027, u\u0027Dijo luego al hu\\xe9sped que le tuviese mucho cuidado de su caballo, porque\u0027, u\u0027era la mejor pieza que com\\xeda pan en el mundo. Mir\\xf3le el ventero, y no le\u0027, u\u0027pareci\\xf3 tan bueno como don Quijote dec\\xeda, ni aun la mitad; y, acomod\\xe1ndole\u0027, u\u0027en la caballeriza, volvi\\xf3 a ver lo que su hu\\xe9sped mandaba, al cual estaban\u0027, u\u0027desarmando las doncellas, que ya se hab\\xedan reconciliado con \\xe9l; las cuales,\u0027, u\u0027aunque le hab\\xedan quitado el peto y el espaldar, jam\\xe1s supieron ni pudieron\u0027, u\u0027desencajarle la gola, ni quitalle la contrahecha celada, que tra\\xeda atada\u0027, u\u0027con unas cintas verdes, y era menester cortarlas, por no poderse quitar los\u0027, u\u0027\\xf1udos; mas \\xe9l no lo quiso consentir en ninguna manera, y as\\xed, se qued\\xf3 toda\u0027, u\u0027aquella noche con la celada puesta, que era la m\\xe1s graciosa y estra\\xf1a\u0027, u\u0027figura que se pudiera pensar; y, al desarmarle, como \\xe9l se imaginaba que\u0027, u\u0027aquellas tra\\xeddas y llevadas que le desarmaban eran algunas principales\u0027, u\u0027se\\xf1oras y damas de aquel castillo, les dijo con mucho donaire:\u0027, u\u0027\u0027, u\u0027   -Nunca fuera caballero\u0027, u\u0027   de damas tan bien servido\u0027, u\u0027   como fuera don Quijote\u0027, u\u0027   cuando de su aldea vino:\u0027, u\u0027   doncellas curaban d\\xe9l;\u0027, u\u0027   princesas, del su rocino,\u0027, u\u0027\u0027, u\u0027o Rocinante, que \\xe9ste es el nombre, se\\xf1oras m\\xedas, de mi caballo, y don\u0027, u\u0027Quijote de la Mancha el m\\xedo; que, puesto que no quisiera descubrirme fasta\u0027, u\u0027que las faza\\xf1as fechas en vuestro servicio y pro me descubrieran, la fuerza\u0027, u\u0027de acomodar al prop\\xf3sito presente este romance viejo de Lanzarote ha sido\u0027, u\u0027causa que sep\\xe1is mi nombre antes de toda saz\\xf3n; pero, tiempo vendr\\xe1 en que\u0027, u\u0027las vuestras se\\xf1or\\xedas me manden y yo obedezca, y el valor de mi brazo\u0027, u\u0027descubra el deseo que tengo de serviros.\u0027, u\u0027\u0027, u\u0027Las mozas, que no estaban hechas a o\\xedr semejantes ret\\xf3ricas, no respond\\xedan\u0027, u\u0027palabra; s\\xf3lo le preguntaron si quer\\xeda comer alguna cosa.\u0027, u\u0027\u0027, u\u0027-Cualquiera yantar\\xeda yo -respondi\\xf3 don Quijote-, porque, a lo que entiendo,\u0027, u\u0027me har\\xeda mucho al caso.\u0027, u\u0027\u0027, u\u0027A dicha, acert\\xf3 a ser viernes aquel d\\xeda, y no hab\\xeda en toda la venta sino\u0027, u\u0027unas raciones de un pescado que en Castilla llaman abadejo, y en Andaluc\\xeda\u0027, u\u0027bacallao, y en otras partes curadillo, y en otras truchuela. Pregunt\\xe1ronle\u0027, u\u0027si por ventura comer\\xeda su merced truchuela, que no hab\\xeda otro pescado que\u0027, u\u0027dalle a comer.\u0027, u\u0027\u0027, u\u0027-Como haya muchas truchuelas -respondi\\xf3 don Quijote-, podr\\xe1n servir de una\u0027, u\u0027trucha, porque eso se me da que me den ocho reales en sencillos que en una\u0027, u\u0027pieza de a ocho. Cuanto m\\xe1s, que podr\\xeda ser que fuesen estas truchuelas\u0027, u\u0027como la ternera, que es mejor que la vaca, y el cabrito que el cabr\\xf3n.\u0027, u\u0027Pero, sea lo que fuere, venga luego, que el trabajo y peso de las armas no\u0027, u\u0027se puede llevar sin el gobierno de las tripas.\u0027, u\u0027\u0027, u\u0027Pusi\\xe9ronle la mesa a la puerta de la venta, por el fresco, y tr\\xfajole el\u0027, u\u0027hu\\xe9sped una porci\\xf3n del mal remojado y peor cocido bacallao, y un pan tan\u0027, u\u0027negro y mugriento como sus armas; pero era materia de grande risa verle\u0027, u\u0027comer, porque, como ten\\xeda puesta la celada y alzada la visera, no pod\\xeda\u0027, u\u0027poner nada en la boca con sus manos si otro no se lo daba y pon\\xeda; y ans\\xed,\u0027, u\u0027una de aquellas se\\xf1oras serv\\xeda deste menester. Mas, al darle de beber, no\u0027, u\u0027fue posible, ni lo fuera si el ventero no horadara una ca\\xf1a, y puesto el un\u0027, u\u0027cabo en la boca, por el otro le iba echando el vino; y todo esto lo receb\\xeda\u0027, u\u0027en paciencia, a trueco de no romper las cintas de la celada.\u0027, u\u0027\u0027, u\u0027Estando en esto, lleg\\xf3 acaso a la venta un castrador de puercos; y, as\\xed\u0027, u\u0027como lleg\\xf3, son\\xf3 su silbato de ca\\xf1as cuatro o cinco veces, con lo cual\u0027, u\u0027acab\\xf3 de confirmar don Quijote que estaba en alg\\xfan famoso castillo, y que\u0027, u\u0027le serv\\xedan con m\\xfasica, y que el abadejo eran truchas; el pan, candeal; y\u0027, u\u0027las rameras, damas; y el ventero, castellano del castillo, y con esto daba\u0027, u\u0027por bien empleada su determinaci\\xf3n y salida. Mas lo que m\\xe1s le fatigaba era\u0027, u\u0027el no verse armado caballero, por parecerle que no se podr\\xeda poner\u0027, u\u0027leg\\xedtimamente en aventura alguna sin recebir la orden de caballer\\xeda.\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027\u0027, u\u0027Cap\\xedtulo III. Donde se cuenta la graciosa manera que tuvo don Quijote en\u0027]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371253_798044482",
      "id": "20170330-180801_1870202936",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-11-25 15:30:21.031",
      "dateFinished": "2020-11-25 15:30:21.355",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n// Ejemplo en Scala con DataSets\nval quijoteDS \u003d spark.read.textFile(\"/datos/quijote.txt\")\nprintln(quijoteDS.getClass)\n\nquijoteDS.show(5, truncate\u003dfalse)\nquijoteDS.take(1000).foreach(println)\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:39.653",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371255_798813980",
      "id": "20170330-180937_748754549",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-06-06 20:17:39.924",
      "dateFinished": "2020-06-06 20:17:40.661",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n## Particiones\n\nEl número de particiones de un RDD puede especificarse en el momento de crearse\n\n-   También se puede modificar una vez creados (`repartition` o `coalesce`)\n-   El método `glom` permite ver como se han creado las particiones",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:40.756",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eParticiones\u003c/h2\u003e\n\u003cp\u003eEl número de particiones de un RDD puede especificarse en el momento de crearse\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eTambién se puede modificar una vez creados (\u003ccode\u003erepartition\u003c/code\u003e o \u003ccode\u003ecoalesce\u003c/code\u003e)\u003c/li\u003e\n  \u003cli\u003eEl método \u003ccode\u003eglom\u003c/code\u003e permite ver como se han creado las particiones\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371257_796505486",
      "id": "20170330-190226_713230823",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2018-11-07 09:26:32.000",
      "dateFinished": "2018-11-07 09:26:32.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize([1,2,3,4], 2)\nprint(rdd.glom().collect())\nprint(rdd.getNumPartitions())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:31:48.033",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[[1, 2], [3, 4]]\n2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371258_797659733",
      "id": "20170331-172145_323923848",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-11-25 15:31:48.266",
      "dateFinished": "2020-11-25 15:31:48.392",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval rdd \u003d sc.parallelize(List(1,2,3,4), 2)\nrdd.glom.collect\nprintln(rdd.partitions.size)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:41.354",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371258_797659733",
      "id": "20170331-172209_1686674443",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-06-06 20:17:41.655",
      "dateFinished": "2020-06-06 20:17:41.989",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n## RDDs y DataFrames\n\nUn DataFrame tiene un RDD subyacente, al que podemos acceder de forma simple",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:42.053",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRDDs y DataFrames\u003c/h2\u003e\n\u003cp\u003eUn DataFrame tiene un RDD subyacente, al que podemos acceder de forma simple\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541417282668_-1474935090",
      "id": "20181105-112802_536694047",
      "dateCreated": "2018-11-05 11:28:02.000",
      "dateStarted": "2018-11-07 09:26:39.000",
      "dateFinished": "2018-11-07 09:26:39.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ndfDatosVuelos2015 \u003d (spark\n    .read\n    .option(\"inferSchema\", \"true\")\n    .option(\"header\", \"true\")\n    .csv(\"/datos/2015-summary.csv\"))\n\nrddDatosVuelos2015 \u003d dfDatosVuelos2015.rdd\n\nrddDatosVuelos2015.take(10)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:32:16.395",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027Romania\u0027, count\u003d15),\n Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027Croatia\u0027, count\u003d1),\n Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027Ireland\u0027, count\u003d344),\n Row(DEST_COUNTRY_NAME\u003du\u0027Egypt\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027United States\u0027, count\u003d15),\n Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027India\u0027, count\u003d62),\n Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027Singapore\u0027, count\u003d1),\n Row(DEST_COUNTRY_NAME\u003du\u0027United States\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027Grenada\u0027, count\u003d62),\n Row(DEST_COUNTRY_NAME\u003du\u0027Costa Rica\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027United States\u0027, count\u003d588),\n Row(DEST_COUNTRY_NAME\u003du\u0027Senegal\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027United States\u0027, count\u003d40),\n Row(DEST_COUNTRY_NAME\u003du\u0027Moldova\u0027, ORIGIN_COUNTRY_NAME\u003du\u0027United States\u0027, count\u003d1)]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541417326891_2173587",
      "id": "20181105-112846_341761767",
      "dateCreated": "2018-11-05 11:28:46.000",
      "dateStarted": "2020-11-25 15:32:16.597",
      "dateFinished": "2020-11-25 15:32:18.826",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval dfDatosVuelos2015 \u003d spark.\n        read.\n        option(\"inferSchema\", \"true\").\n        option(\"header\", \"true\").\n        csv(\"/datos/2015-summary.csv\")\n        \nval rddDatosVuelos2015 \u003d dfDatosVuelos2015.rdd\n\nrddDatosVuelos2015.take(10)\n\n\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:54:34.905",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541418881585_-560372337",
      "id": "20181105-115441_816753735",
      "dateCreated": "2018-11-05 11:54:41.000",
      "dateStarted": "2020-06-15 19:55:33.896",
      "dateFinished": "2020-06-15 19:55:34.618",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\n# Se puede crear un DataFrame a partir de un rdd\ndfNuevo \u003d rddDatosVuelos2015.toDF()\ndfNuevo.show()",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 19:55:54.431",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541499617756_-102027387",
      "id": "20181106-102017_1134133615",
      "dateCreated": "2018-11-06 10:20:17.000",
      "dateStarted": "2020-06-15 19:55:54.661",
      "dateFinished": "2020-06-15 19:55:55.159",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\n// Se puede crear un DataFrame a partir de un rdd\nval dfNuevo \u003d spark.createDataFrame(rddDatosVuelos2015, dfDatosVuelos2015.schema)\ndfNuevo.show()",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:44.589",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541499612732_-1616313958",
      "id": "20181106-102012_824485395",
      "dateCreated": "2018-11-06 10:20:12.000",
      "dateStarted": "2020-06-06 20:17:44.793",
      "dateFinished": "2020-06-06 20:17:45.213",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n## RDDs (y DataSets) simples\n\nRDDs formados por elementos simples",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:45.293",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRDDs (y DataSets) simples\u003c/h2\u003e\n\u003cp\u003eRDDs formados por elementos simples\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541348301053_-484820418",
      "id": "20181104-161821_767362863",
      "dateCreated": "2018-11-04 16:18:21.000",
      "dateStarted": "2018-11-04 16:19:08.000",
      "dateFinished": "2018-11-04 16:19:08.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### Transformaciones sobre un único RDD o DataSet\n\nGeneran un nuevo RDD a partir de uno dado modificando cada uno de los elementos del original",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:45.293",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTransformaciones sobre un único RDD o DataSet\u003c/h3\u003e\n\u003cp\u003eGeneran un nuevo RDD a partir de uno dado modificando cada uno de los elementos del original\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371259_797274984",
      "id": "20170331-172358_2080517103",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2018-11-04 16:20:23.000",
      "dateFinished": "2018-11-04 16:20:23.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `filter(func)` filtra los elementos de un RDD",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:45.293",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003efilter(func)\u003c/code\u003e filtra los elementos de un RDD\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346508895_-198812055",
      "id": "20181104-154828_944630563",
      "dateCreated": "2018-11-04 15:48:28.000",
      "dateStarted": "2018-11-04 15:48:52.000",
      "dateFinished": "2018-11-04 15:48:52.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nquijsRDD \u003d quijoteRDD.filter(lambda l: \"Quijote\" in l)\nsanchsRDD \u003d quijoteRDD.filter(lambda l: \"Sancho\" in l)\nquijssancsRDD \u003d quijsRDD.intersection(sanchsRDD)\nquijssancsRDD.cache()\nprint(\"Líneas con Quijote y Sancho {0}\".format(quijssancsRDD.count()))\nfor l in quijssancsRDD.takeSample(False,10):\n    print(l)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:34:13.082",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Líneas con Quijote y Sancho 350\n-Yo te aseguro, Sancho -dijo don Quijote-, que debe de ser algún sabio\n-¿De qué te ríes, Sancho? -dijo don Quijote.\ncual, abrazando a don Quijote y a Sancho, siguió su camino, y don Quijote\nA esta sazón, ya se había puesto don Quijote de hinojos junto a Sancho, y\nel cura, y los tres a pie, Cardenio, el barbero y Sancho Panza, don Quijote\n-Duerme, Sancho amigo -respondió don Quijote-, si es que te dan lugar los\n-Por Dios, Sancho -dijo don Quijote-, que, por solas estas últimas razones\n-Calla, Sancho -dijo don Quijote-; que, aunque parecen aceñas, no lo son; y\n-¡Qué mal lo entiendes! -respondió don Quijote-. Hágote saber, Sancho, que\n-¿Tan malas obras te hago, Sancho -respondió don Quijote-, que me querrías\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371259_797274984",
      "id": "20170331-172858_1569775186",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-11-25 15:34:13.237",
      "dateFinished": "2020-11-25 15:34:14.186",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval quijsDS \u003d quijoteDS.filter(l \u003d\u003e l contains \"Quijote\")\nval sanchsDS \u003d quijoteDS.filter(l \u003d\u003e l contains \"Sancho\")\nval quijssancsDS \u003d quijsDS.intersect(sanchsDS)\nquijssancsDS.cache\nprintln(\"Líneas con Quijote y Sancho:\"+quijssancsDS.count)\n\nquijssancsDS.sample(false, 0.05).show(false)\n",
      "user": "anonymous",
      "dateUpdated": "2020-11-05 17:25:03.406",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256371259_797274984",
      "id": "20170331-173335_1931016742",
      "dateCreated": "2017-10-17 16:06:11.000",
      "dateStarted": "2020-06-15 19:57:49.864",
      "dateFinished": "2020-06-15 19:57:49.980",
      "status": "ERROR",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\n# Obtener los valores positivos de un rango de números\nrdd \u003d sc.parallelize(range(-5,5))          # Rango [-5, 5)\nfiltered_rdd \u003d rdd.filter(lambda x: x \u003e\u003d 0)   # Devuelve los positivos\n\nassert filtered_rdd.collect() \u003d\u003d [0, 1, 2, 3, 4]",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:35:25.059",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346820412_1956439946",
      "id": "20181104-155340_907765298",
      "dateCreated": "2018-11-04 15:53:40.000",
      "dateStarted": "2020-11-25 15:35:25.215",
      "dateFinished": "2020-11-25 15:35:25.437",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n// Obtener los valores positivos de un rango de números\nval ds \u003d (-5 to 5).toDS        // Rango [-5, 5]\nval filtered_ds \u003d ds.filter(x \u003d\u003e x\u003e\u003d0)  // Devuelve los positivos\n\nassert(filtered_ds.collect().sameElements(Array(0, 1, 2, 3, 4, 5)))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:51.082",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346858864_1901606102",
      "id": "20181104-155418_852173741",
      "dateCreated": "2018-11-04 15:54:18.000",
      "dateStarted": "2020-06-06 20:17:51.305",
      "dateFinished": "2020-06-06 20:17:52.026",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `map(func)` aplica una función a los elementos de un RDD\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:52.112",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003emap(func)\u003c/code\u003e aplica una función a los elementos de un RDD\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346885167_1973725758",
      "id": "20181104-155445_178625934",
      "dateCreated": "2018-11-04 15:54:45.000",
      "dateStarted": "2018-11-04 15:55:09.000",
      "dateFinished": "2018-11-04 15:55:09.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Añade 1 a cada elemento del RDD\n# Para cada elemento, obtiene una tupla (x, x**2)\ndef add1(x):\n    return(x+1)\n\nsquared_rdd \u003d (filtered_rdd\n               .map(add1)                 # Añade 1 a cada elemento del RDD\n               .map(lambda x: (x, x*x)))  # Para cada elemento, obtén una tupla (x, x**2)\n\nassert squared_rdd.collect() \u003d\u003d [(1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:36:12.580",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346929864_2045420184",
      "id": "20181104-155529_1931307002",
      "dateCreated": "2018-11-04 15:55:29.000",
      "dateStarted": "2020-11-25 15:36:12.784",
      "dateFinished": "2020-11-25 15:36:12.968",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n/* Añade 1 a cada elemento del DataSet\n   Para cada elemento, obtén una tupla (x, x**2) */\ndef add1(x: Int): Int \u003d return(x+1)\n\nval squared_ds \u003d (filtered_ds\n               .map(add1)\n               .map(x \u003d\u003e (x, x*x))) \n               \nassert(squared_ds.collect().sameElements(Array((1,1), (2,4), (3,9), (4,16), (5,25), (6,36))))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:52.581",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346962512_1578252311",
      "id": "20181104-155602_1836583593",
      "dateCreated": "2018-11-04 15:56:02.000",
      "dateStarted": "2020-06-06 20:17:52.793",
      "dateFinished": "2020-06-06 20:17:53.744",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `flatMap(func)` igual que `map`, pero “aplana” la salida",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:53.804",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003eflatMap(func)\u003c/code\u003e igual que \u003ccode\u003emap\u003c/code\u003e, pero “aplana” la salida\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541346989445_929531726",
      "id": "20181104-155629_477173196",
      "dateCreated": "2018-11-04 15:56:29.000",
      "dateStarted": "2018-11-04 15:56:49.000",
      "dateFinished": "2018-11-04 15:56:49.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nsquaredflat_rdd \u003d (filtered_rdd\n                   .map(add1)\n                   .flatMap(lambda x: (x, x*x)))  # Da la salida en forma de lista\n                   \nassert squaredflat_rdd.collect() \u003d\u003d [1, 1, 2, 4, 3, 9, 4, 16, 5, 25]",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:16:17.629",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541347012935_1799476618",
      "id": "20181104-155652_228691185",
      "dateCreated": "2018-11-04 15:56:52.000",
      "dateStarted": "2020-06-17 18:16:18.110",
      "dateFinished": "2020-06-17 18:16:18.497",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval squaredflat_ds \u003d (filtered_ds\n                       .map(add1)\n                       .flatMap(x \u003d\u003e Seq(x, x*x)))  // Da la salida en forma de lista\n                       \nassert(squaredflat_ds.collect().sameElements(Array(1, 1, 2, 4, 3, 9, 4, 16, 5, 25, 6, 36)))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:54.242",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541347039046_-2094073865",
      "id": "20181104-155719_2139293175",
      "dateCreated": "2018-11-04 15:57:19.000",
      "dateStarted": "2020-06-06 20:17:54.541",
      "dateFinished": "2020-06-06 20:17:55.216",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `sample(withReplacement, fraction, seed\u003dNone)` devuelve una muestra del RDD o DataSet\n    - `withReplacement` - si True, cada elemento puede aparecer varias veces en la muestra\n    - `fraction` - tamaño esperado de la muestra como una fracción del tamaño del RDD \n        -  **sin reemplazo**: probabilidad de seleccionar un elemento, su valor debe ser [0, 1]\n        -  **con reemplazo**: En RDD número esperado de veces que se escoge un elemento, su valor debe ser \u003e\u003d 0\n    - `seed` - semilla para el generador de números aleatorios\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:55.242",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003esample(withReplacement, fraction, seed\u003dNone)\u003c/code\u003e devuelve una muestra del RDD o DataSet\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003ewithReplacement\u003c/code\u003e - si True, cada elemento puede aparecer varias veces en la muestra\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003efraction\u003c/code\u003e - tamaño esperado de la muestra como una fracción del tamaño del RDD\n        \u003cul\u003e\n          \u003cli\u003e\u003cstrong\u003esin reemplazo\u003c/strong\u003e: probabilidad de seleccionar un elemento, su valor debe ser [0, 1]\u003c/li\u003e\n          \u003cli\u003e\u003cstrong\u003econ reemplazo\u003c/strong\u003e: En RDD número esperado de veces que se escoge un elemento, su valor debe ser \u0026gt;\u003d 0\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003eseed\u003c/code\u003e - semilla para el generador de números aleatorios\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911927_648941929",
      "id": "20170329-201743_290559078",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:01:12.000",
      "dateFinished": "2018-07-02 12:01:12.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nsrdd1 \u003d squaredflat_rdd.sample(False, 0.5)\nsrdd2 \u003d squaredflat_rdd.sample(True, 2)\nsrdd3 \u003d squaredflat_rdd.sample(False, 0.8, 14)\nprint(\u0027s1\u003d{0}\\ns2\u003d{1}\\ns3\u003d{2}\u0027.format(srdd1.collect(), srdd2.collect(), srdd3.collect()))",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:16:23.326",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 6.0,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911928_647018185",
      "id": "20170329-203311_862513240",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:16:23.872",
      "dateFinished": "2020-06-17 18:16:24.721",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval s1 \u003d squaredflat_ds.sample(false, 0.5).collect\nval s2 \u003d squaredflat_ds.sample(true, 1).collect\nval s3 \u003d squaredflat_ds.sample(false, 0.8, 33).collect",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:56.019",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911929_646633436",
      "id": "20170329-203347_1552507870",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:17:56.252",
      "dateFinished": "2020-06-06 20:17:56.671",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `distinct()` devuelve un nuevo RDD o DataSet sin duplicados\n    - El orden de la salida no está definido",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:56.760",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003edistinct()\u003c/code\u003e devuelve un nuevo RDD o DataSet sin duplicados\n    \u003cul\u003e\n      \u003cli\u003eEl orden de la salida no está definido\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911930_647787682",
      "id": "20170329-203441_1844476828",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:00:55.000",
      "dateFinished": "2018-07-02 12:00:55.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ndistinct_rdd \u003d squaredflat_rdd.distinct()\nprint(distinct_rdd.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:16:30.644",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 6.0,
        "editorHide": false,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911931_647402933",
      "id": "20170329-203628_228751011",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:16:31.243",
      "dateFinished": "2020-06-17 18:16:32.784",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval distinct_ds \u003d squaredflat_ds.distinct\nprintln(distinct_ds.collect().mkString(\" \"))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:57.445",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911932_645479189",
      "id": "20170329-203700_15282910",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:17:57.654",
      "dateFinished": "2020-06-06 20:17:58.765",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n\n-   `groupBy(func)` devuelve un RDD con los datos agrupados en formato clave/valor, usando una función para obtener la clave",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:58.860",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        },
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003egroupBy(func)\u003c/code\u003e devuelve un RDD con los datos agrupados en formato clave/valor, usando una función para obtener la clave\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911932_645479189",
      "id": "20170329-203811_1642837733",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:02:02.000",
      "dateFinished": "2018-07-02 12:02:02.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\ngrouped_rdd \u003d distinct_rdd.groupBy(lambda x: x%3)\nprint(grouped_rdd.collect())\nprint([(x,sorted(y)) for (x,y) in grouped_rdd.collect()])",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:16:37.113",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 6.0,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911933_645094440",
      "id": "20170329-204857_1028989163",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:16:37.470",
      "dateFinished": "2020-06-17 18:16:38.531",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval grouped_rdd \u003d distinct_ds.rdd.groupBy(x \u003d\u003e x%3)\nval grouped \u003d grouped_rdd.collect()\ngrouped.foreach(f \u003d\u003e println(f._1+\" (\"+f._2.mkString(\" \")+\") \"))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:17:59.756",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911934_646248687",
      "id": "20170329-204934_1104249486",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:00.088",
      "dateFinished": "2020-06-06 20:18:02.269",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n### Transformaciones sobre dos RDDs o DataSets\n\nOperaciones tipo conjunto sobre dos RDDs o DataSets\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:02.317",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTransformaciones sobre dos RDDs o DataSets\u003c/h3\u003e\n\u003cp\u003eOperaciones tipo conjunto sobre dos RDDs o DataSets\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911934_646248687",
      "id": "20170329-205114_575254284",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:10:13.000",
      "dateFinished": "2018-07-02 12:10:13.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `rdda.union(rddb)` devuelve un RDD o DataSet con la unión de los datos de los dos de partida",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:02.317",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12.0,
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003erdda.union(rddb)\u003c/code\u003e devuelve un RDD o DataSet con la unión de los datos de los dos de partida\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911935_645863938",
      "id": "20170329-205757_2112017013",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:08:44.000",
      "dateFinished": "2018-07-02 12:08:44.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdda \u003d sc.parallelize([\u0027a\u0027, \u0027b\u0027, \u0027c\u0027])\nrddb \u003d sc.parallelize([\u0027c\u0027, \u0027d\u0027, \u0027e\u0027])\nrddu \u003d rdda.union(rddb)\nassert rddu.collect() \u003d\u003d [\u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027c\u0027, \u0027d\u0027, \u0027e\u0027]",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:02.317",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911936_730123947",
      "id": "20170623-150738_1168158715",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:02.565",
      "dateFinished": "2020-06-06 20:18:02.649",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval dsa \u003d Seq(\"a\",\"b\",\"c\").toDS\nval dsb \u003d Seq(\"c\", \"d\", \"e\").toDS\nval dsu \u003d dsa.union(dsb)\nassert(dsu.collect().sameElements(Array(\"a\", \"b\", \"c\", \"c\", \"d\", \"e\")))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:02.665",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911936_730123947",
      "id": "20170623-150816_1429594386",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:02.933",
      "dateFinished": "2020-06-06 20:18:03.472",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n- `rdda.intersection(rddb)` devuelve un RDD o DataSet con los datos comunes en los dos",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:03.536",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003erdda.intersection(rddb)\u003c/code\u003e devuelve un RDD o DataSet con los datos comunes en los dos\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911937_729739198",
      "id": "20170623-150925_1009184379",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:09:49.000",
      "dateFinished": "2018-07-02 12:09:49.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrddi \u003d rdda.intersection(rddb)\nassert rddi.collect() \u003d\u003d [\u0027c\u0027]",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:03.536",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911946_727815454",
      "id": "20170623-151233_690863371",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:03.757",
      "dateFinished": "2020-06-06 20:18:04.306",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval dsi \u003d dsa.intersect(dsb)\nassert(dsi.collect().sameElements(Array(\"c\")))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:04.359",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "dsi: org.apache.spark.sql.Dataset[String] \u003d [value: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911947_727430705",
      "id": "20170623-151437_492376933",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:04.612",
      "dateFinished": "2020-06-06 20:18:05.553",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `rdda.subtract(rddb)` devuelve un RDD con los datos del primero menos los del segundo (sólo RDDs)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:05.606",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003erdda.subtract(rddb)\u003c/code\u003e devuelve un RDD con los datos del primero menos los del segundo (sólo RDDs)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911948_725506960",
      "id": "20170623-151526_969885287",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:12:50.000",
      "dateFinished": "2018-07-02 12:12:50.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdds \u003d rdda.subtract(rddb)\nassert rdds.collect() \u003d\u003d [\u0027a\u0027, \u0027b\u0027]",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:05.607",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911949_725122211",
      "id": "20170623-151757_1166441932",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:05.861",
      "dateFinished": "2020-06-06 20:18:06.429",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval rdds \u003d dsa.rdd.subtract(dsb.rdd)\nassert(rdds.collect().sameElements(Array(\"a\", \"b\")))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:06.462",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911949_725122211",
      "id": "20170623-151814_2051185449",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:06.714",
      "dateFinished": "2020-06-06 20:18:07.161",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n`rdda.cartesian(rddb)` producto cartesiano de ambos RDDs (operación muy costosa) (sólo RDDs)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:07.214",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003erdda.cartesian(rddb)\u003c/code\u003e producto cartesiano de ambos RDDs (operación muy costosa) (sólo RDDs)\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911950_726276458",
      "id": "20170623-151934_1260452805",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-10 19:12:08.000",
      "dateFinished": "2018-07-10 19:12:10.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrddc \u003d rdda.cartesian(rddb)\nassert rddc.collect() \u003d\u003d [(\u0027a\u0027,\u0027c\u0027),(\u0027a\u0027,\u0027d\u0027),(\u0027a\u0027,\u0027e\u0027),(\u0027b\u0027,\u0027c\u0027),(\u0027b\u0027,\u0027d\u0027),\\\n                          (\u0027b\u0027,\u0027e\u0027),(\u0027c\u0027,\u0027c\u0027), (\u0027c\u0027,\u0027d\u0027), (\u0027c\u0027,\u0027e\u0027)]",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:07.214",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911951_725891709",
      "id": "20170623-152019_1868962375",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:07.435",
      "dateFinished": "2020-06-06 20:18:07.523",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval rddc \u003d dsa.rdd.cartesian(dsb.rdd)\nassert(rddc.collect().sameElements( \n                  Array((\"a\",\"c\"),(\"a\",\"d\"),(\"a\",\"e\"),(\"b\",\"c\"),(\"b\",\"d\"),(\"b\",\"e\"),(\"c\",\"c\"), (\"c\",\"d\"), (\"c\",\"e\"))))",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:07.534",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911952_736279929",
      "id": "20170623-152044_192972117",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:07.857",
      "dateFinished": "2020-06-06 20:18:08.312",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n### Acciones sobre RDDs o DatSets simples\n\nObtienen datos (simples o compuestos) a partir de un RDD o DataSet\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:08.361",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eAcciones sobre RDDs o DatSets simples\u003c/h3\u003e\n\u003cp\u003eObtienen datos (simples o compuestos) a partir de un RDD o DataSet\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911953_735895180",
      "id": "20170623-152136_1488130107",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-11-04 16:21:44.000",
      "dateFinished": "2018-11-04 16:21:44.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\nPrincipales acciones de agregación: `reduce` y `fold`",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:08.361",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003ePrincipales acciones de agregación: \u003ccode\u003ereduce\u003c/code\u003e y \u003ccode\u003efold\u003c/code\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911953_735895180",
      "id": "20170623-152411_769750178",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-11-04 16:21:53.000",
      "dateFinished": "2018-11-04 16:21:53.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `reduce(op)` combina los elementos de un RDD o DataSet en paralelo, aplicando un operador\n    - El operador de reducción debe ser un *monoide conmutativo* (operador binario asociativo y conmutativo)\n    - Primero se realiza la redución a nivel de partición y luego se van reduciendo los valores intermedios",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:08.361",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ereduce(op)\u003c/code\u003e combina los elementos de un RDD o DataSet en paralelo, aplicando un operador\n    \u003cul\u003e\n      \u003cli\u003eEl operador de reducción debe ser un \u003cem\u003emonoide conmutativo\u003c/em\u003e (operador binario asociativo y conmutativo)\u003c/li\u003e\n      \u003cli\u003ePrimero se realiza la redución a nivel de partición y luego se van reduciendo los valores intermedios\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911954_737049427",
      "id": "20170623-152434_1207380535",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:21:54.000",
      "dateFinished": "2018-07-02 12:21:54.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize(range(1,10), 2)  # rango [1, 10)\nprint(rdd.glom().collect())\n\n# Reducción con una función lambda\np \u003d rdd.reduce(lambda x,y: x*y) # r \u003d 1*2*3*4*5*6*7*8*9 \u003d 362880\nprint(\"1*2*3*4*5*6*7*8*9 \u003d {0}\".format(p))\n\n# Reducción con un operador predefinido\nfrom operator import add\ns \u003d rdd.reduce(add) # s \u003d 1+2+3+4+5+6+7+8+9 \u003d 45\nprint(\"1+2+3+4+5+6+7+8+9 \u003d {0}\".format(s))\n\n# Prueba con un operador no conmutativo\np \u003d rdd.reduce(lambda x,y: x-y) # r \u003d 1-2-3-4-5-6-7-8-9 \u003d -43\nprint(\"1-2-3-4-5-6-7-8-9 \u003d {0}\".format(p))\n\n# No funciona con RDDs vacíos\n#sc.parallelize([]).reduce(add)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:41:17.333",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[[1, 2, 3, 4], [5, 6, 7, 8, 9]]\n1*2*3*4*5*6*7*8*9 \u003d 362880\n1+2+3+4+5+6+7+8+9 \u003d 45\n1-2-3-4-5-6-7-8-9 \u003d 17\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911955_736664678",
      "id": "20170623-152449_2044341447",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-11-25 15:41:17.484",
      "dateFinished": "2020-11-25 15:41:17.703",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval ds \u003d (1 to 9).toDS    // rango [1, 9]\n\n// Reducciones conn funciones anónimas\nval p \u003d ds.reduce((x,y) \u003d\u003e x*y)    // r \u003d 1*2*3*4*5*6*7*8*9 \u003d 362880\nval s \u003d ds.reduce(_+_)             // s \u003d 1+2+3+4+5+6+7+8+9 \u003d 45\n\n// No funciona con DataSets vacíos\n//val l \u003d Seq[Int]().toDS().reduce(_+_)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:09.162",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911964_731662943",
      "id": "20170623-152609_1304876764",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:09.463",
      "dateFinished": "2020-06-06 20:18:10.041",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `fold(cero, op)` versión general de `reduce` (sólo con RDDs): \n    - Debemos proporcionar un valor inicial `cero` para el operador\n    - El valor inicial debe ser el valor identidad para el operador (p.e. 0 para suma; 1 para producto, o una lista vacía para concatenación de listas)\n        - Permite utilizar RDDs vacíos\n    - La función `op` debe ser un monoide conmutativo para garantizar un resultado consistente\n        - Comportamiento diferente a las operaciones `fold` de lenguajes como Scala\n        - El operador se aplica a nivel de partición (usando `cero` como valor inicial), y finalmente entre todas las particiones (usando `cero`de nuevo)\n        - Para operadores no conmutativos el resultado podría ser diferente del obtenido mediante un `fold` secuencial",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:10.063",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003efold(cero, op)\u003c/code\u003e versión general de \u003ccode\u003ereduce\u003c/code\u003e (sólo con RDDs):\n    \u003cul\u003e\n      \u003cli\u003eDebemos proporcionar un valor inicial \u003ccode\u003ecero\u003c/code\u003e para el operador\u003c/li\u003e\n      \u003cli\u003eEl valor inicial debe ser el valor identidad para el operador (p.e. 0 para suma; 1 para producto, o una lista vacía para concatenación de listas)\n        \u003cul\u003e\n          \u003cli\u003ePermite utilizar RDDs vacíos\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003eLa función \u003ccode\u003eop\u003c/code\u003e debe ser un monoide conmutativo para garantizar un resultado consistente\n        \u003cul\u003e\n          \u003cli\u003eComportamiento diferente a las operaciones \u003ccode\u003efold\u003c/code\u003e de lenguajes como Scala\u003c/li\u003e\n          \u003cli\u003eEl operador se aplica a nivel de partición (usando \u003ccode\u003ecero\u003c/code\u003e como valor inicial), y finalmente entre todas las particiones (usando \u003ccode\u003ecero\u003c/code\u003ede nuevo)\u003c/li\u003e\n          \u003cli\u003ePara operadores no conmutativos el resultado podría ser diferente del obtenido mediante un \u003ccode\u003efold\u003c/code\u003e secuencial\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911967_732047691",
      "id": "20170623-152906_1430717319",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:26:30.000",
      "dateFinished": "2018-07-02 12:26:30.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize([[1,2,3,4], [-10, -9, -8, -7, -6], [\u0027a\u0027, \u0027b\u0027, \u0027c\u0027]], 2)\nprint(rdd.glom().collect())\n\nf \u003d rdd.fold([], lambda x,y: x+y)\nprint(f)\n\n# Se puede hacer un fold de un RDD vacío\nsc.parallelize([]).fold(0, add)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:44:36.008",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[[[1, 2, 3, 4]], [[-10, -9, -8, -7, -6], [\u0027a\u0027, \u0027b\u0027, \u0027c\u0027]]]\n[1, 2, 3, 4, -10, -9, -8, -7, -6, \u0027a\u0027, \u0027b\u0027, \u0027c\u0027]\n0"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911968_717811982",
      "id": "20170703-103902_21939567",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-11-25 15:44:36.137",
      "dateFinished": "2020-11-25 15:44:36.442",
      "status": "FINISHED"
    },
    {
      "text": "%spark\nval rdd \u003d sc.parallelize(List(List.range(1,5), List.range(-10,-3), List(\u0027a\u0027, \u0027b\u0027, \u0027c\u0027)))\nval l \u003d rdd.glom.collect\n\nval f \u003d rdd.fold(List[AnyVal]())((l1, l2) \u003d\u003e l1 ::: l2)\nprintln(f)\n\n// Se puede hacer un fold de un RDD vacío\nsc.parallelize(List()).fold(0)(_+_)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:18:10.869",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911968_717811982",
      "id": "20170703-105549_1797580218",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:18:11.351",
      "dateFinished": "2020-06-06 20:18:12.108",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\n// Ejemplo de comportamiento extraño\n// Comportamiento en secuencial\nval a \u003d Array(2, 3)\nval f \u003d a.fold(0)((p, v) \u003d\u003e p+v*v) // f \u003d (0 + 2*2) + (3*3) \u003d 13\n\n// Comportamiento en paralelo\nval rdda1 \u003d sc.parallelize(a, 2)\nval fa1 \u003d rdda1.fold(0)((p, v) \u003d\u003e p+v*v)  \n// Partición 0: fa0 \u003d (0 + 2*2) \u003d 4\n// Partición 1: fa1 \u003d (0 + 3*3) \u003d 9\n// fold final: fa \u003d (0 + fa0*fa0) + (fa1*fa1) \u003d (0 + 4*4) + (9*9) \u003d 97\n\n// El resultado puede variar con el número de particiones\nval rdda2 \u003d sc.parallelize(a, 1)\nval fa2 \u003d rdda2.fold(0)((p, v) \u003d\u003e p+v*v)\n// ¿Por qué obtenemos este valor?",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:47:11.349",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "a: Array[Int] \u003d Array(2, 3)\nf: Int \u003d 13\nrdda1: org.apache.spark.rdd.RDD[Int] \u003d ParallelCollectionRDD[58] at parallelize at \u003cconsole\u003e:35\nfa1: Int \u003d 97\nrdda2: org.apache.spark.rdd.RDD[Int] \u003d ParallelCollectionRDD[59] at parallelize at \u003cconsole\u003e:42\nfa2: Int \u003d 169\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911969_717427233",
      "id": "20170703-105912_55497367",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-11-25 15:47:11.455",
      "dateFinished": "2020-11-25 15:47:12.064",
      "status": "FINISHED"
    },
    {
      "text": "%md\nOtras acciones de agregación: \n\n- `aggregate` (solo RDDs)\n",
      "user": "anonymous",
      "dateUpdated": "2018-11-09 12:42:25.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eOtras acciones de agregación: \u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003eaggregate\u003c/code\u003e (solo RDDs)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911970_718581480",
      "id": "20170703-113627_1578850086",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-11-09 12:42:16.000",
      "dateFinished": "2018-11-09 12:42:16.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n  - `aggregate(cero,seqOp,combOp)`: Devuelve una colección agregando los elementos del RDD usando dos funciones:\n    1. `seqOp` -  agregación a nivel de partición: se crea un acumulador por partición (inicializado a `cero`) y se agregan los valores de la partición en el acumulador\n    2. `combOp` - agregación entre particiones: se agregan los acumuladores de todas las particiones\n    -  Ambas agregaciones usan un valor inicial `cero` (similar al caso de `fold`).\n - Versión general de `reduce` y `fold`    \n - La primera función (`seqOp`) puede devolver un tipo, U, diferente del tipo T de los elementos del RDD\n    - `seqOp` agregar datos de tipo T y devuelve un tipo U\n    - `combOp` agrega datos de tipo U\n    - `cero` debe ser de tipo U\n - Permite devolver un tipo diferente al de los elementos del RDD de entrada.",
      "user": "anonymous",
      "dateUpdated": "2019-12-02 15:50:12.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003eaggregate(cero,seqOp,combOp)\u003c/code\u003e: Devuelve una colección agregando los elementos del RDD usando dos funciones:\n    \u003col\u003e\n      \u003cli\u003e\u003ccode\u003eseqOp\u003c/code\u003e - agregación a nivel de partición: se crea un acumulador por partición (inicializado a \u003ccode\u003ecero\u003c/code\u003e) y se agregan los valores de la partición en el acumulador\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003ecombOp\u003c/code\u003e - agregación entre particiones: se agregan los acumuladores de todas las particiones\u003c/li\u003e\n    \u003c/ol\u003e\n    \u003cul\u003e\n      \u003cli\u003eAmbas agregaciones usan un valor inicial \u003ccode\u003ecero\u003c/code\u003e (similar al caso de \u003ccode\u003efold\u003c/code\u003e).\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eVersión general de \u003ccode\u003ereduce\u003c/code\u003e y \u003ccode\u003efold\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eLa primera función (\u003ccode\u003eseqOp\u003c/code\u003e) puede devolver un tipo, U, diferente del tipo T de los elementos del RDD\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003eseqOp\u003c/code\u003e agregar datos de tipo T y devuelve un tipo U\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003ecombOp\u003c/code\u003e agrega datos de tipo U\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003ecero\u003c/code\u003e debe ser de tipo U\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003ePermite devolver un tipo diferente al de los elementos del RDD de entrada.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911971_718196731",
      "id": "20170703-123142_2117589639",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2019-12-02 15:50:13.000",
      "dateFinished": "2019-12-02 15:50:14.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nl \u003d [1, 2, 3, 4, 5, 6, 7, 8]\nrdd \u003d sc.parallelize(l)\n\n# acc es una tupla de tres elementos (List, Double, Int)\n# En el primer elemento de acc (lista) le concatenamos los elementos del RDD al cuadrado\n# en el segundo, acumulamos los elementos del RDD usando multiplicación\n# y en el tercero, contamos los elementos del RDD\nseqOp  \u003d (lambda acc, val: (acc[0]+[val*val], \n                            acc[1]*val, \n                            acc[2]+1))\n# Para cada partición se genera una tupla tipo acc\n# En esta operación se combinan los tres elementos de las tuplas\ncombOp \u003d (lambda acc1, acc2: (acc1[0]+acc2[0], \n                              acc1[1]*acc2[1], \n                              acc1[2]+acc2[2]))\n                              \na \u003d rdd.aggregate(([], 1., 0), seqOp, combOp) \n\nprint(a)\n\nassert a[1] \u003d\u003d 8.*7.*6.*5.*4.*3.*2.*1.\nassert a[2] \u003d\u003d len(l)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:32:46.550",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911971_718196731",
      "id": "20170703-123220_1084599665",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:32:46.897",
      "dateFinished": "2020-06-17 18:32:47.330",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval l \u003d List(1, 2, 3, 4, 5, 6, 7, 8)\nval rdd \u003d sc.parallelize(l)\nval dl \u003d rdd.glom.collect\n\n// acc es una tupla de tres elementos (List[Int], Double, Int)\n// En el primer elemento de acc, insertamos por el principio los elementos del RDD al cuadrado\n// en el segundo, acumulamos los elementos del RDD usando multiplicación\n// y en el tercero, contamos los elementos del RDD\ndef seqOp(acum: (List[Int], Double, Int), valor: Int)  \u003d ((valor*valor) :: acum._1, \n                                                          acum._2 * valor, \n                                                          acum._3 + 1)\n// Para cada partición se genera una tupla tipo acc\n// En esta operación se combinan los tres elementos de las tuplas\ndef combOp(acum1: (List[Int], Double, Int), acum2: (List[Int], Double, Int)) \u003d (acum1._1 ::: acum2._1, \n                                                                                acum1._2 * acum2._2, \n                                                                                acum1._3 + acum2._3)\n\nval a \u003d rdd.aggregate((List[Int](), 1.0, 0))(seqOp, combOp)\n\nassert(a._2 \u003d\u003d (8.0*7.0*6.0*5.0*4.0*3.0*2.0*1.0))\nassert(a._3 \u003d\u003d l.length)",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:22:15.414",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911972_716272987",
      "id": "20170703-123338_1722497343",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-06 20:22:15.547",
      "dateFinished": "2020-06-06 20:22:16.120",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\nAcciones para contar elementos sobre RDDs\n\n- `count()` devuelve un entero con el número exacto de elementos del RDD (también DataSets)\n- `countApprox(timeout, confidence\u003d0.95)` versión aproximada de `count()` que devuelve un resultado potencialmente incompleto en un tiempo máximo, incluso si no todas las tareas han finalizado. (Experimental).\n    - `timeout` es un entero largo e indica el tiempo en milisegundos\n    - `confidence` probabilidad de obtener el valor real. Si `confidence` es 0.90 quiere decir que si se ejecuta múltiples veces, se espera que el 90% de ellas se obtenga el valor correcto. Valor [0,1]\n- `countApproxDistinct(relativeSD\u003d0.05)` devuelve una estimación del número de elementos diferentes del RDD.  (Experimental).\n    - `relativeSD` – exactitud relativa (valores más pequeños implican menor error, pero requieren más memoria; debe ser mayor que 0.000017).\n",
      "user": "anonymous",
      "dateUpdated": "2018-11-30 16:00:09.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAcciones para contar elementos sobre RDDs\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecount()\u003c/code\u003e devuelve un entero con el número exacto de elementos del RDD (también DataSets)\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003ecountApprox(timeout, confidence\u003d0.95)\u003c/code\u003e versión aproximada de \u003ccode\u003ecount()\u003c/code\u003e que devuelve un resultado potencialmente incompleto en un tiempo máximo, incluso si no todas las tareas han finalizado. (Experimental).\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003etimeout\u003c/code\u003e es un entero largo e indica el tiempo en milisegundos\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003econfidence\u003c/code\u003e probabilidad de obtener el valor real. Si \u003ccode\u003econfidence\u003c/code\u003e es 0.90 quiere decir que si se ejecuta múltiples veces, se espera que el 90% de ellas se obtenga el valor correcto. Valor [0,1]\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003ecountApproxDistinct(relativeSD\u003d0.05)\u003c/code\u003e devuelve una estimación del número de elementos diferentes del RDD. (Experimental).\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003erelativeSD\u003c/code\u003e – exactitud relativa (valores más pequeños implican menor error, pero requieren más memoria; debe ser mayor que 0.000017).\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911973_715888238",
      "id": "20170703-123819_1952495873",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-11-04 16:43:04.000",
      "dateFinished": "2018-11-04 16:43:06.000",
      "status": "READY"
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize([i % 20 for i in range(10000)], 16)\nprint(\"Número total de elementos: {0}\".format(rdd.count()))\nprint(\"Número de elementos distintos: {0}\".format(rdd.distinct().count()))\n\nprint(\"Número total de elementos (aprox.): {0}\".format(rdd.countApprox(1, 0.4)))\nprint(\"Número de elementos distintos (approx.): {0}\".format(rdd.countApproxDistinct(0.5)))",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:33:50.950",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911977_714349242",
      "id": "20170703-173130_1957873231",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:33:51.316",
      "dateFinished": "2020-06-17 18:33:55.386",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `countByValue()` devuelve el número de apariciones de cada elemento del RDD como un mapa (o diccionario) de tipo clave/valor\n    - Las claves son los elementos del RDD y cada valor, el número de ocurrencias de la clave asociada al mismo      ",
      "user": "anonymous",
      "dateUpdated": "2017-10-18 15:51:51.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecountByValue()\u003c/code\u003e devuelve el número de apariciones de cada elemento del RDD como un mapa (o diccionario) de tipo clave/valor\n    \u003cul\u003e\n      \u003cli\u003eLas claves son los elementos del RDD y cada valor, el número de ocurrencias de la clave asociada al mismo\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911978_715503489",
      "id": "20170703-173321_496682545",
      "dateCreated": "2017-10-18 15:51:51.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize(list(\"abracadabra\")).cache()\nmimapa \u003d rdd.countByValue()\n\nprint(type(mimapa))\nprint(mimapa.items())",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:35:05.429",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911979_715118740",
      "id": "20170703-174613_1907594816",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:35:05.744",
      "dateFinished": "2020-06-17 18:35:06.220",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\nAcciones para obtener valores\n\n- Estos métodos deben usarse con cuidado, si el resultado esperado es muy grande puede saturar la memoria del driver",
      "user": "anonymous",
      "dateUpdated": "2018-11-09 12:43:07.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAcciones para obtener valores\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eEstos métodos deben usarse con cuidado, si el resultado esperado es muy grande puede saturar la memoria del driver\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911979_715118740",
      "id": "20170703-174652_1161473593",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-11-04 16:23:26.000",
      "dateFinished": "2018-11-04 16:23:26.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `collect()` devuelve una lista con todos los elementos del RDD o DataSet\n-   `show()` muestra los elementos del DataSet como una tabla ",
      "user": "anonymous",
      "dateUpdated": "2018-07-03 08:45:52.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecollect()\u003c/code\u003e devuelve una lista con todos los elementos del RDD o DataSet\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003eshow()\u003c/code\u003e muestra los elementos del DataSet como una tabla\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911980_713194995",
      "id": "20170703-175645_49874765",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-02 12:38:53.000",
      "dateFinished": "2018-07-02 12:38:53.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nlista \u003d rdd.collect()\nprint(lista)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:36:10.888",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911981_712810246",
      "id": "20170703-175708_692957162",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:36:11.188",
      "dateFinished": "2020-06-17 18:36:11.424",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval dSet \u003d Seq((\"a\", 5), (\"c\", 1), (\"b\", 2), (\"r\", 2), (\"d\", 1)).toDS\ndSet.show",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:36:16.367",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1530607557829_162267940",
      "id": "20180703-084557_648474223",
      "dateCreated": "2018-07-03 08:45:57.000",
      "dateStarted": "2020-06-17 18:36:16.683",
      "dateFinished": "2020-06-17 18:36:21.863",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `take(n)` devuelve los `n` primeros elementos del RDD o las n primeras filas del DataSet\n-   `takeAsList(n)` devuelve las `n` primeras filas del DataSet como una lista\n-   `takeSample(withRep, n, [seed])` devuelve `n` elementos aleatorios del RDD\n    - `withRep`: si True, en la muestra puede aparecer el mismo elemento varias veces\n    - `seed`: semilla para el generador de números aleatorios",
      "user": "anonymous",
      "dateUpdated": "2018-07-03 08:54:46.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003etake(n)\u003c/code\u003e devuelve los \u003ccode\u003en\u003c/code\u003e primeros elementos del RDD o las n primeras filas del DataSet\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003etakeAsList(n)\u003c/code\u003e devuelve las \u003ccode\u003en\u003c/code\u003e primeras filas del DataSet como una lista\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003etakeSample(withRep, n, [seed])\u003c/code\u003e devuelve \u003ccode\u003en\u003c/code\u003e elementos aleatorios del RDD\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003ewithRep\u003c/code\u003e: si True, en la muestra puede aparecer el mismo elemento varias veces\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003eseed\u003c/code\u003e: semilla para el generador de números aleatorios\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911989_722044220",
      "id": "20170703-175744_233516755",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2018-07-03 08:54:44.000",
      "dateFinished": "2018-07-03 08:54:44.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nt \u003d rdd.take(4)\nprint(t)\ns \u003d rdd.takeSample(False, 4)\nprint(s)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:36:55.676",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911990_723198467",
      "id": "20170703-175835_855067818",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:36:55.991",
      "dateFinished": "2020-06-17 18:36:56.968",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%spark\nval a \u003d dSet.take(3)\nval l \u003d dSet.takeAsList(3)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:37:22.021",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1530607858637_-2097901985",
      "id": "20180703-085058_149426194",
      "dateCreated": "2018-07-03 08:50:58.000",
      "dateStarted": "2020-06-17 18:37:22.303",
      "dateFinished": "2020-06-17 18:37:23.669",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `top(n)` devuelve una lista con los primeros `n` elementos del RDD ordenados en orden descendente\n-   `takeOrdered(n,[orden])` devuelve una lista con los primeros `n` elementos del RDD en orden ascendente (opuesto a `top`), o siguiendo el orden indicado en la función opcional",
      "user": "anonymous",
      "dateUpdated": "2017-10-18 15:51:51.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003etop(n)\u003c/code\u003e devuelve una lista con los primeros \u003ccode\u003en\u003c/code\u003e elementos del RDD ordenados en orden descendente\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003etakeOrdered(n,[orden])\u003c/code\u003e devuelve una lista con los primeros \u003ccode\u003en\u003c/code\u003e elementos del RDD en orden ascendente (opuesto a \u003ccode\u003etop\u003c/code\u003e), o siguiendo el orden indicado en la función opcional\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911992_720889973",
      "id": "20170703-180548_1087944092",
      "dateCreated": "2017-10-18 15:51:51.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize([8, 4, 2, 9, 3, 1, 10, 5, 6, 7]).cache()\n\nprint(\"4 elementos más grandes: {0}\".format(rdd.top(4)))\n\nprint(\"4 elementos más pequeños: {0}\".format(rdd.takeOrdered(4)))\n\nprint(\"4 elementos más grandes: {0}\".format(rdd.takeOrdered(4, lambda x: -x)))",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:37:40.462",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508341911994_721659471",
      "id": "20170703-180737_1728024765",
      "dateCreated": "2017-10-18 15:51:51.000",
      "dateStarted": "2020-06-17 18:37:40.734",
      "dateFinished": "2020-06-17 18:37:41.432",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n## RDDs con pares clave/valor (aka *Pair RDDs*)\n\n-   Tipos de datos muy usados en Big Data (MapReduce)\n\n-   Spark dispone de operaciones especiales para su manejo",
      "user": "anonymous",
      "dateUpdated": "2018-11-09 12:43:32.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRDDs con pares clave/valor (aka \u003cem\u003ePair RDDs\u003c/em\u003e)\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003e\n  \u003cp\u003eTipos de datos muy usados en Big Data (MapReduce)\u003c/p\u003e\u003c/li\u003e\n  \u003cli\u003e\n  \u003cp\u003eSpark dispone de operaciones especiales para su manejo\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401686_-513317687",
      "id": "20170708-183641_1609794276",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2018-11-04 17:18:16.000",
      "dateFinished": "2018-11-04 17:18:16.000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### Creación de *Pair RDDs*\nLos RDDs clave/valor pueden crearse a partir de una lista de tuplas, a partir de otro RDD o mediante un zip de dos RDDs.",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eCreación de \u003cem\u003ePair RDDs\u003c/em\u003e\u003c/h3\u003e\n\u003cp\u003eLos RDDs clave/valor pueden crearse a partir de una lista de tuplas, a partir de otro RDD o mediante un zip de dos RDDs.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401694_-516395678",
      "id": "20170708-183831_1559169513",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   A partir de una lista de tuplas",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003eA partir de una lista de tuplas\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401694_-516395678",
      "id": "20170708-183842_742913676",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nprdd \u003d sc.parallelize([(\u0027a\u0027,2), (\u0027b\u0027,5), (\u0027a\u0027,3)])\nprint(prdd.collect())\n\nprdd \u003d sc.parallelize(zip([\u0027a\u0027, \u0027b\u0027, \u0027c\u0027], range(3)))\nprint(prdd.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:51:30.268",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027a\u0027, 2), (\u0027b\u0027, 5), (\u0027a\u0027, 3)]\n[(\u0027a\u0027, 0), (\u0027b\u0027, 1), (\u0027c\u0027, 2)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401695_-516780427",
      "id": "20170708-184001_776040480",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:51:30.409",
      "dateFinished": "2020-11-25 15:51:30.547",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   A partir de otro RDD",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003eA partir de otro RDD\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401696_-531016137",
      "id": "20170708-184200_538389667",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\n# Ejemplo usando un fichero\n# Para cada línea ontenemos una tupla, siendo el primer elemento\n# la primera palabra de la línes, y el segundo la línea completa\nlinesrdd \u003d sc.textFile(\"/datos/quijote.txt\")\nprdd \u003d linesrdd.map(lambda x: (x.split(\" \")[0], x))\n\nprint(\u0027Par (1ª palabra, línea): {0}\\n\u0027.format(prdd.takeSample(False, 1)))",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:53:08.189",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Par (1ª palabra, línea): [(u\u0027gobernador\u0027, u\u0027gobernador descolg\\xe1ndose con una s\\xe1bana por las ventanas de la casa de\u0027)]\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401696_-531016137",
      "id": "20170708-185030_1311976050",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:53:08.304",
      "dateFinished": "2020-11-25 15:53:08.719",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Usando keyBy(f): Crea tuplas de los elementos del RDD usando f para obtener la clave.\nnrdd \u003d sc.parallelize(range(2,5))\nprdd \u003d nrdd.keyBy(lambda x: x*x)\n\nprint(prdd.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:53:53.821",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(4, 2), (9, 3), (16, 4)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401697_-531400886",
      "id": "20170708-185123_228837373",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:53:53.926",
      "dateFinished": "2020-11-25 15:53:54.085",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# zipWithIndex(): Zipea el RDD con los índices de sus elementos.\nrdd \u003d sc.parallelize([\u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027d\u0027, \u0027e\u0027, \u0027f\u0027, \u0027g\u0027, \u0027h\u0027], 3)\nprdd \u003d rdd.zipWithIndex()\nprint(rdd.glom().collect())\n\nprint(prdd.collect())\n\n# Este método dispara un Spark job cuando el RDD tiene más de una partición.",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:54:35.445",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[[\u0027a\u0027, \u0027b\u0027], [\u0027c\u0027, \u0027d\u0027], [\u0027e\u0027, \u0027f\u0027, \u0027g\u0027, \u0027h\u0027]]\n[(\u0027a\u0027, 0), (\u0027b\u0027, 1), (\u0027c\u0027, 2), (\u0027d\u0027, 3), (\u0027e\u0027, 4), (\u0027f\u0027, 5), (\u0027g\u0027, 6), (\u0027h\u0027, 7)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401698_-530246639",
      "id": "20170708-185551_1592986113",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:54:35.558",
      "dateFinished": "2020-11-25 15:54:35.754",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# zipWithUniqueId(): Zipea el RDD con identificadores únicos (long) para cada elemento.\n# Los elementos en la partición k-ésima obtienen los ids k, n+k, 2*n+k,... siendo n \u003d nº de particiones\n# No dispara un trabajo Spark\nrdd \u003d sc.parallelize([\u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027d\u0027, \u0027e\u0027, \u0027f\u0027, \u0027g\u0027, \u0027h\u0027], 3)\nprint(\"Particionado del RDD: {0}\".format(rdd.glom().collect()))\nprdd \u003d rdd.zipWithUniqueId()\n\nprint(prdd.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:54:54.839",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Particionado del RDD: [[\u0027a\u0027, \u0027b\u0027], [\u0027c\u0027, \u0027d\u0027], [\u0027e\u0027, \u0027f\u0027, \u0027g\u0027, \u0027h\u0027]]\n[(\u0027a\u0027, 0), (\u0027b\u0027, 3), (\u0027c\u0027, 1), (\u0027d\u0027, 4), (\u0027e\u0027, 2), (\u0027f\u0027, 5), (\u0027g\u0027, 8), (\u0027h\u0027, 11)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401698_-530246639",
      "id": "20170708-185951_183844766",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:54:54.958",
      "dateFinished": "2020-11-25 15:54:55.155",
      "status": "FINISHED"
    },
    {
      "text": "%md\n- Mediante un zip de dos RDDs\n    - Los RDDs deben tener el mismo número de particiones y el mismo número de elementos en cada partición",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003eMediante un zip de dos RDDs\n    \u003cul\u003e\n      \u003cli\u003eLos RDDs deben tener el mismo número de particiones y el mismo número de elementos en cada partición\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401699_-530631388",
      "id": "20170708-190101_1648829592",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd1 \u003d sc.parallelize(range(0, 5), 2)\nrdd2 \u003d sc.parallelize(range(1000, 1005), 2)\nprdd \u003d rdd1.zip(rdd2)\n\nprint(prdd.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 15:56:28.508",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(0, 1000), (1, 1001), (2, 1002), (3, 1003), (4, 1004)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401700_-532555132",
      "id": "20170708-190142_1751232574",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 15:56:28.631",
      "dateFinished": "2020-11-25 15:56:28.744",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### Transformaciones sobre un único RDD clave/valor\nSobre un único RDD clave/valor podemos efectuar transformaciones de agregación a nivel de clave y transformaciones que afectan a las claves o a los valores",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTransformaciones sobre un único RDD clave/valor\u003c/h3\u003e\n\u003cp\u003eSobre un único RDD clave/valor podemos efectuar transformaciones de agregación a nivel de clave y transformaciones que afectan a las claves o a los valores\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401706_-533324630",
      "id": "20170708-190217_1787358861",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%md\n#### Transformaciones de agregación",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eTransformaciones de agregación\u003c/h4\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401708_-535633123",
      "id": "20170708-190411_1670560456",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `reduceByKey(func)`/`foldByKey(func)`\n    -   Devuelven un RDD, agrupando los valores asociados a la misma clave mediante `func`\n    -   Similares a `reduce` y `fold` sobre RDDs simples",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ereduceByKey(func)\u003c/code\u003e/\u003ccode\u003efoldByKey(func)\u003c/code\u003e\n    \u003cul\u003e\n      \u003cli\u003eDevuelven un RDD, agrupando los valores asociados a la misma clave mediante \u003ccode\u003efunc\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003eSimilares a \u003ccode\u003ereduce\u003c/code\u003e y \u003ccode\u003efold\u003c/code\u003e sobre RDDs simples\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401709_-536017872",
      "id": "20170708-190425_1242806742",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nfrom operator import add\nprdd   \u003d sc.parallelize([(\u0027a\u0027, 2), (\u0027b\u0027, 5), (\u0027a\u0027, 8), (\u0027b\u0027, 6), (\u0027b\u0027, 2),(\u0027c\u0027,13)],2).cache()\nprint(prdd.glom().collect())\nredrdd \u003d prdd.reduceByKey(add)\n\nprint(redrdd.sortByKey().collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:04:45.093",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[[(\u0027a\u0027, 2), (\u0027b\u0027, 5), (\u0027a\u0027, 8)], [(\u0027b\u0027, 6), (\u0027b\u0027, 2), (\u0027c\u0027, 13)]]\n[(\u0027a\u0027, 10), (\u0027b\u0027, 13), (\u0027c\u0027, 13)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401712_-524860154",
      "id": "20170708-190521_817452515",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:04:45.199",
      "dateFinished": "2020-11-25 16:04:45.549",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `groupByKey()` agrupa valores asociados a misma clave\n    - Operación muy costosa en comunicaciones\n    - Mejor usar operaciones de reducción\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003egroupByKey()\u003c/code\u003e agrupa valores asociados a misma clave\n    \u003cul\u003e\n      \u003cli\u003eOperación muy costosa en comunicaciones\u003c/li\u003e\n      \u003cli\u003eMejor usar operaciones de reducción\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401712_-524860154",
      "id": "20170708-190611_1823281727",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\ngrouprdd \u003d prdd.groupByKey()\n\nprint(grouprdd.collect())\nprint\n\nlista \u003d [(k, list(v)) for k, v in grouprdd.collect()]\nprint(lista)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:01:08.625",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027c\u0027, \u003cpyspark.resultiterable.ResultIterable object at 0x7f8f9c35bd10\u003e), (\u0027b\u0027, \u003cpyspark.resultiterable.ResultIterable object at 0x7f8f9c1f6090\u003e), (\u0027a\u0027, \u003cpyspark.resultiterable.ResultIterable object at 0x7f8f9c36dd90\u003e)]\n\n[(\u0027c\u0027, [13]), (\u0027b\u0027, [5, 6, 2]), (\u0027a\u0027, [2, 8])]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401714_-524090656",
      "id": "20170708-190636_136764461",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:01:08.730",
      "dateFinished": "2020-11-25 16:01:09.086",
      "status": "FINISHED"
    },
    {
      "text": "%md\n- `combineByKey(createCombiner(func1), mergeValue(func2), mergeCombiners(func3))`\n    - Método general para agregación por clave, similar a `aggregate`\n    - Especifica tres funciones:\n\n     1.  `createCombiner` al recorrer los elementos de cada partición, si nos encontramos una clave nueva se crea un acumulador y se inicializa con `func1`\n\n     2.  `mergeValue` mezcla los valores de cada clave en cada partición usando `func2`\n\n     3.  `mergeCombiners` mezcla los resultados de las diferentes particiones mediante `func3`\n\n- Los valores del RDD de salida pueden tener un tipo diferente al de los valores del RDD de entrada.",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode\u003ecombineByKey(createCombiner(func1), mergeValue(func2), mergeCombiners(func3))\u003c/code\u003e\u003c/p\u003e\n    \u003cul\u003e\n      \u003cli\u003eMétodo general para agregación por clave, similar a \u003ccode\u003eaggregate\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003eEspecifica tres funciones:\u003c/li\u003e\n    \u003c/ul\u003e\n    \u003col\u003e\n      \u003cli\u003e\n      \u003cp\u003e\u003ccode\u003ecreateCombiner\u003c/code\u003e al recorrer los elementos de cada partición, si nos encontramos una clave nueva se crea un acumulador y se inicializa con \u003ccode\u003efunc1\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n      \u003cli\u003e\n      \u003cp\u003e\u003ccode\u003emergeValue\u003c/code\u003e mezcla los valores de cada clave en cada partición usando \u003ccode\u003efunc2\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n      \u003cli\u003e\n      \u003cp\u003e\u003ccode\u003emergeCombiners\u003c/code\u003e mezcla los resultados de las diferentes particiones mediante \u003ccode\u003efunc3\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n  \u003cp\u003eLos valores del RDD de salida pueden tener un tipo diferente al de los valores del RDD de entrada.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401714_-524090656",
      "id": "20170708-190731_2066132843",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\n# Para cada clave, obten una tupla que tenga la suma y el número de valores\nsumCount \u003d prdd.combineByKey(\n                            (lambda x: (x, 1)),\n                            (lambda x, y: (x[0]+y, x[1]+1)),\n                            (lambda x, y: (x[0]+y[0], x[1]+y[1])))\n\nprint(sumCount.collect())\n\n# Con el RDD anterior, obtenemos la media de los valores\nm \u003d sumCount.mapValues(lambda v: float(v[0])/v[1])\nprint(m.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-06-06 20:24:27.252",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401715_-524475405",
      "id": "20170708-191016_646406872",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-06-06 20:24:27.353",
      "dateFinished": "2020-06-06 20:24:27.738",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n#### Transformaciones sobre claves o valores\n-   `keys()` devuelve un RDD con las claves\n-   `values()` devuelve un RDD con los valores\n-   `sortByKey()` devuelve un RDD clave/valor con las claves ordenadas\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eTransformaciones sobre claves o valores\u003c/h4\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ekeys()\u003c/code\u003e devuelve un RDD con las claves\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003evalues()\u003c/code\u003e devuelve un RDD con los valores\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003esortByKey()\u003c/code\u003e devuelve un RDD clave/valor con las claves ordenadas\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401720_-527938145",
      "id": "20170708-191117_1364066341",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nprint(\"RDD completo: {0}\".format(prdd.collect()))\nprint(\"RDD con las claves: {0}\".format(prdd.keys().collect()))\nprint(\"RDD con los valores: {0}\".format(prdd.values().collect()))\nprint(\"RDD con las claves ordenadas: {0}\".format(prdd.sortByKey().collect()))",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:06:20.498",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "RDD completo: [(\u0027a\u0027, 2), (\u0027b\u0027, 5), (\u0027a\u0027, 8), (\u0027b\u0027, 6), (\u0027b\u0027, 2), (\u0027c\u0027, 13)]\nRDD con las claves: [\u0027a\u0027, \u0027b\u0027, \u0027a\u0027, \u0027b\u0027, \u0027b\u0027, \u0027c\u0027]\nRDD con los valores: [2, 5, 8, 6, 2, 13]\nRDD con las claves ordenadas: [(\u0027a\u0027, 2), (\u0027a\u0027, 8), (\u0027b\u0027, 5), (\u0027b\u0027, 6), (\u0027b\u0027, 2), (\u0027c\u0027, 13)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401730_-542558604",
      "id": "20170708-191447_687177311",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:06:20.625",
      "dateFinished": "2020-11-25 16:06:21.003",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `mapValues(func)` devuelve un RDD aplicando una función sobre los valores\n-   `flatMapValues(func)` devuelve un RDD aplicando una función sobre los valores y “aplanando” la salida",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003emapValues(func)\u003c/code\u003e devuelve un RDD aplicando una función sobre los valores\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003eflatMapValues(func)\u003c/code\u003e devuelve un RDD aplicando una función sobre los valores y “aplanando” la salida\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401731_-542943353",
      "id": "20170708-191517_765834006",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nmapv \u003d prdd.mapValues(lambda x: (x, 10*x))\nprint(mapv.collect())\n\nfmapv \u003d prdd.flatMapValues(lambda x: (x, 10*x))\nprint(fmapv.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:06:48.858",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027a\u0027, (2, 20)), (\u0027b\u0027, (5, 50)), (\u0027a\u0027, (8, 80)), (\u0027b\u0027, (6, 60)), (\u0027b\u0027, (2, 20)), (\u0027c\u0027, (13, 130))]\n[(\u0027a\u0027, 2), (\u0027a\u0027, 20), (\u0027b\u0027, 5), (\u0027b\u0027, 50), (\u0027a\u0027, 8), (\u0027a\u0027, 80), (\u0027b\u0027, 6), (\u0027b\u0027, 60), (\u0027b\u0027, 2), (\u0027b\u0027, 20), (\u0027c\u0027, 13), (\u0027c\u0027, 130)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401732_-544867097",
      "id": "20170708-191556_1332053395",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:06:48.960",
      "dateFinished": "2020-11-25 16:06:49.143",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### Transformaciones sobre dos RDDs clave/valor\nCombinan dos RDDs de tipo clave/valor para obtener un tercer RDD.",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTransformaciones sobre dos RDDs clave/valor\u003c/h3\u003e\n\u003cp\u003eCombinan dos RDDs de tipo clave/valor para obtener un tercer RDD.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401732_-544867097",
      "id": "20170708-191725_164724394",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%md\n`join`/`leftOuterJoin`/`rightOuterJoin`/`fullOuterJoin` realizan inner/outer/full joins entre los dos RDDs",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003ccode\u003ejoin\u003c/code\u003e/\u003ccode\u003eleftOuterJoin\u003c/code\u003e/\u003ccode\u003erightOuterJoin\u003c/code\u003e/\u003ccode\u003efullOuterJoin\u003c/code\u003e realizan inner/outer/full joins entre los dos RDDs\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401732_-544867097",
      "id": "20170708-191917_1589064380",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd1 \u003d sc.parallelize([(\"a\", 2), (\"b\", 5), (\"a\", 8)]).cache()\nrdd2 \u003d sc.parallelize([(\"c\", 7), (\"a\", 1)]).cache()\n\nrdd3 \u003d rdd1.join(rdd2)\n\nprint(rdd3.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:08:41.227",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027a\u0027, (2, 1)), (\u0027a\u0027, (8, 1))]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401733_-545251846",
      "id": "20170708-191952_936041351",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:08:41.333",
      "dateFinished": "2020-11-25 16:08:41.957",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd3 \u003d rdd1.leftOuterJoin(rdd2)\n\nprint(rdd3.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:09:22.626",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027a\u0027, (2, 1)), (\u0027a\u0027, (8, 1)), (\u0027b\u0027, (5, None))]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401733_-545251846",
      "id": "20170708-192016_18816027",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:09:22.729",
      "dateFinished": "2020-11-25 16:09:23.159",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd3 \u003d rdd1.rightOuterJoin(rdd2)\n\nprint(rdd3.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:09:46.239",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027c\u0027, (None, 7)), (\u0027a\u0027, (2, 1)), (\u0027a\u0027, (8, 1))]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401733_-545251846",
      "id": "20170708-192145_997237677",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:09:46.354",
      "dateFinished": "2020-11-25 16:09:46.799",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd3 \u003d rdd1.fullOuterJoin(rdd2)\n\nprint(rdd3.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:09:49.783",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027c\u0027, (None, 7)), (\u0027a\u0027, (2, 1)), (\u0027a\u0027, (8, 1)), (\u0027b\u0027, (5, None))]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401734_-544097599",
      "id": "20170708-192331_430218468",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:09:49.895",
      "dateFinished": "2020-11-25 16:09:50.314",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `subtractByKey` elimina elementos con una clave presente en otro RDD",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003esubtractByKey\u003c/code\u003e elimina elementos con una clave presente en otro RDD\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401734_-544097599",
      "id": "20170708-192349_567995858",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd3 \u003d rdd1.subtractByKey(rdd2)\n\nprint(rdd3.collect())",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:55:27.239",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401734_-544097599",
      "id": "20170708-192432_1212352299",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-06-17 18:55:27.577",
      "dateFinished": "2020-06-17 18:55:28.455",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `cogroup` agrupa los datos que comparten la misma clave en ambos RDDs",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecogroup\u003c/code\u003e agrupa los datos que comparten la misma clave en ambos RDDs\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401734_-544097599",
      "id": "20170708-192517_337338238",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nrdd3 \u003d rdd1.cogroup(rdd2)\n\nprint(rdd3.collect())\n\nmap \u003d rdd3.mapValues(lambda v: [list(l) for l in v]).collectAsMap()\n\nprint(map)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 18:55:55.313",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401735_-544482348",
      "id": "20170708-192726_248584895",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-06-17 18:55:55.595",
      "dateFinished": "2020-06-17 18:55:56.811",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%md\n### Acciones sobre RDDs clave/valor\nSobre los RDDs clave/valor podemos aplicar las acciones para RDDs simples y algunas adicionales.\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eAcciones sobre RDDs clave/valor\u003c/h3\u003e\n\u003cp\u003eSobre los RDDs clave/valor podemos aplicar las acciones para RDDs simples y algunas adicionales.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401736_-546406093",
      "id": "20170708-192747_13302338",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%md\n-   `collectAsMap()` obtiene el RDD en forma de mapa",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecollectAsMap()\u003c/code\u003e obtiene el RDD en forma de mapa\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401736_-546406093",
      "id": "20170708-193400_1679400807",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nprdd \u003d sc.parallelize([(\"a\", 7), (\"b\", 5), (\"a\", 8)]).cache()\n\nMapa \u003d prdd.collectAsMap()\n\nprint(Mapa)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:10:35.525",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{\u0027a\u0027: 8, \u0027b\u0027: 5}\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401736_-546406093",
      "id": "20170709-175449_337839348",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:10:35.626",
      "dateFinished": "2020-11-25 16:10:35.703",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `countByKey()` devuelve un mapa indicando el número de ocurrencias de cada clave",
      "user": "anonymous",
      "dateUpdated": "2018-07-10 20:00:02.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003ecountByKey()\u003c/code\u003e devuelve un mapa indicando el número de ocurrencias de cada clave\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401737_-546790842",
      "id": "20170708-193258_247625966",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\ncountMap \u003d prdd.countByKey()\n\nprint(countMap)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:11:56.155",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defaultdict(\u003ctype \u0027int\u0027\u003e, {\u0027a\u0027: 2, \u0027b\u0027: 1})\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401737_-546790842",
      "id": "20170708-193311_1223398973",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:11:56.259",
      "dateFinished": "2020-11-25 16:11:56.418",
      "status": "FINISHED"
    },
    {
      "text": "%md\n-   `lookup(key)` devuelve una lista con los valores asociados con una clave",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:41.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003elookup(key)\u003c/code\u003e devuelve una lista con los valores asociados con una clave\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401738_-545636595",
      "id": "20170708-193446_1844221283",
      "dateCreated": "2017-10-17 16:06:41.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nlistA \u003d prdd.lookup(\u0027a\u0027)\n\nprint(listA)",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:12:19.421",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[7, 8]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256401738_-545636595",
      "id": "20170708-193653_1520387021",
      "dateCreated": "2017-10-17 16:06:41.000",
      "dateStarted": "2020-11-25 16:12:19.526",
      "dateFinished": "2020-11-25 16:12:19.611",
      "status": "FINISHED"
    },
    {
      "text": "%md\nRDDs numéricos\n--------------\n\nFunciones de estadística descriptiva implementadas en Spark\n\n  Método              |  Descripción                       \n  ------------------- | ---------------------------------- \n  stats()             | Resumen de estadísticas            \n  mean()              | Media aritmética\n  sum(), max(), min() | Suma, máximo y mínimo\n  variance()          | Varianza de los elementos\n  sampleVariance()    | Varianza de una muestra\n  stdev()             | Desviación estándar\n  sampleStdev()       | Desviación estándar de una muestra\n  histogram()         | Histograma",
      "user": "anonymous",
      "dateUpdated": "2017-10-17 16:06:56.000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRDDs numéricos\u003c/h2\u003e\n\u003cp\u003eFunciones de estadística descriptiva implementadas en Spark\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003eMétodo \u003c/th\u003e\n      \u003cth\u003eDescripción\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003estats() \u003c/td\u003e\n      \u003ctd\u003eResumen de estadísticas\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003emean() \u003c/td\u003e\n      \u003ctd\u003eMedia aritmética\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003esum(), max(), min() \u003c/td\u003e\n      \u003ctd\u003eSuma, máximo y mínimo\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003evariance() \u003c/td\u003e\n      \u003ctd\u003eVarianza de los elementos\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003esampleVariance() \u003c/td\u003e\n      \u003ctd\u003eVarianza de una muestra\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003estdev() \u003c/td\u003e\n      \u003ctd\u003eDesviación estándar\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003esampleStdev() \u003c/td\u003e\n      \u003ctd\u003eDesviación estándar de una muestra\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003ehistogram() \u003c/td\u003e\n      \u003ctd\u003eHistograma\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256416321_659042860",
      "id": "20170710-102649_699397831",
      "dateCreated": "2017-10-17 16:06:56.000",
      "status": "READY",
      "errorMessage": ""
    },
    {
      "text": "%pyspark\nimport numpy as np\n\n# Un RDD con datos aleatorios de una distribución normal\nnrdd \u003d sc.parallelize(np.random.normal(size\u003d100000)).cache()\n\n# Resumen de estadísticas\nsts \u003d nrdd.stats()\n\nprint(\"Resumen de estadísticas:\\n {0}\\n\".format(sts))",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:14:33.111",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Resumen de estadísticas:\n (count: 100000, mean: -0.00214950027026, stdev: 0.996896620216, max: 4.54069665793, min: -4.03138840765)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256416322_660197106",
      "id": "20170710-103912_570261895",
      "dateCreated": "2017-10-17 16:06:56.000",
      "dateStarted": "2020-11-25 16:14:33.197",
      "dateFinished": "2020-11-25 16:14:33.519",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nfrom math import fabs\n\n# Filtra outliers\nstddev \u003d sts.stdev()\navg \u003d sts.mean()\n\nfrdd \u003d nrdd.filter(lambda x: fabs(x - avg) \u003c 3*stddev).cache()\n\nprint(\"Número de outliers: {0}\".format(sts.count() - frdd.count()))",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:15:12.652",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Número de outliers: 277\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256416323_659812357",
      "id": "20170711-122431_39387483",
      "dateCreated": "2017-10-17 16:06:56.000",
      "dateStarted": "2020-11-25 16:15:12.742",
      "dateFinished": "2020-11-25 16:15:13.088",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nimport matplotlib.pyplot as plt; plt.rcdefaults()\n\n# Obtiene un histograma con 10 grupos\nx,y \u003d frdd.histogram(10)\n\n# Limpia la gráfica\nplt.gcf().clear()\n\nplt.bar(x[:-1], y, width\u003d0.6)\nplt.xlabel(u\u0027Valores\u0027)\nplt.ylabel(u\u0027Número de ocurrencias\u0027)\nplt.title(u\u0027Histograma\u0027)\n\nplt.show()",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:15:23.554",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.figure.Figure at 0x7f8f9c35bd90\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1508256416323_659812357",
      "id": "20170711-124622_1013514896",
      "dateCreated": "2017-10-17 16:06:56.000",
      "dateStarted": "2020-11-25 16:15:23.643",
      "dateFinished": "2020-11-25 16:15:24.200",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Salvar RDDs\n\nLos RDDs se pueden salvar a disco como ficheros de texto, ficheros Sequence y, en general, tipo de ficheros que pueda escribir Hadoop.",
      "user": "anonymous",
      "dateUpdated": "2018-11-09 12:45:57.000",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eSalvar RDDs\u003c/h2\u003e\n\u003cp\u003eLos RDDs se pueden salvar a disco como ficheros de texto, ficheros Sequence y, en general, tipo de ficheros que pueda escribir Hadoop.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541582838097_1677606955",
      "id": "20181107-092718_1254531833",
      "dateCreated": "2018-11-07 09:27:18.000",
      "dateStarted": "2018-11-09 12:45:55.000",
      "dateFinished": "2018-11-09 12:45:55.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Salva como fichero de texto\n# Se crea un fichero por partición\nnrdd.saveAsTextFile(\"file:///tmp/nrdd\")",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:16:01.839",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541582943954_-1398233472",
      "id": "20181107-092903_1632824478",
      "dateCreated": "2018-11-07 09:29:03.000",
      "dateStarted": "2020-11-25 16:16:01.928",
      "dateFinished": "2020-11-25 16:16:02.512",
      "status": "FINISHED"
    },
    {
      "text": "%sh\nls -lh /tmp/nrdd\nhead /tmp/nrdd/part-00000\nrm -rf /tmp/nrdd",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:16:06.460",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "total 1.5M\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00000\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00001\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00002\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00003\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00004\n-rw-r--r-- 1 root root 137K Nov 25 16:16 part-00005\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00006\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00007\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00008\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00009\n-rw-r--r-- 1 root root 122K Nov 25 16:16 part-00010\n-rw-r--r-- 1 root root 132K Nov 25 16:16 part-00011\n-rw-r--r-- 1 root root    0 Nov 25 16:16 _SUCCESS\n-1.44520631109\n1.32475680241\n-0.750689135446\n-0.996615829207\n0.881276227053\n-0.966563595787\n0.0222091778349\n0.672321553675\n0.554836390596\n0.458977930682\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541582993131_785566371",
      "id": "20181107-092953_77660486",
      "dateCreated": "2018-11-07 09:29:53.000",
      "dateStarted": "2020-11-25 16:16:06.545",
      "dateFinished": "2020-11-25 16:16:08.694",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Salva como fichero de texto comprimido\nnrdd.saveAsTextFile(\"file:///tmp/nrdd-bzip\", \"org.apache.hadoop.io.compress.BZip2Codec\")",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:16:38.415",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541582988226_1339962022",
      "id": "20181107-092948_1374371075",
      "dateCreated": "2018-11-07 09:29:48.000",
      "dateStarted": "2020-11-25 16:16:38.503",
      "dateFinished": "2020-11-25 16:16:39.599",
      "status": "FINISHED"
    },
    {
      "text": "%sh\nls -lh /tmp/nrdd-bzip\nrm -rf /tmp/nrdd-bzip",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:16:44.334",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "total 588K\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00000.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00001.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00002.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00003.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00004.bz2\n-rw-r--r-- 1 root root 54K Nov 25 16:16 part-00005.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00006.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00007.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00008.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00009.bz2\n-rw-r--r-- 1 root root 48K Nov 25 16:16 part-00010.bz2\n-rw-r--r-- 1 root root 52K Nov 25 16:16 part-00011.bz2\n-rw-r--r-- 1 root root   0 Nov 25 16:16 _SUCCESS\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541583826581_-1903794676",
      "id": "20181107-094346_1297026571",
      "dateCreated": "2018-11-07 09:43:46.000",
      "dateStarted": "2020-11-25 16:16:44.426",
      "dateFinished": "2020-11-25 16:16:44.455",
      "status": "FINISHED"
    },
    {
      "text": "%md\n#### Guardar como fichero Sequence\nTiene que ser un RDD clave valor",
      "user": "anonymous",
      "dateUpdated": "2018-11-09 12:46:11.000",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eGuardar como fichero Sequence\u003c/h4\u003e\n\u003cp\u003eTiene que ser un RDD clave valor\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541583883397_-1807137742",
      "id": "20181107-094443_249452669",
      "dateCreated": "2018-11-07 09:44:43.000",
      "dateStarted": "2018-11-07 09:45:18.000",
      "dateFinished": "2018-11-07 09:45:18.000",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\nrdd \u003d sc.parallelize([(\"a\",2), (\"b\",5), (\"a\",8)], 2)\n\n# Salvamos el RDD clave valor como fichero Sequence\nrdd.saveAsSequenceFile(\"file:///tmp/rddsequence\")",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:17:02.903",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541583921839_-728071624",
      "id": "20181107-094521_145092316",
      "dateCreated": "2018-11-07 09:45:21.000",
      "dateStarted": "2020-11-25 16:17:02.989",
      "dateFinished": "2020-11-25 16:17:03.246",
      "status": "FINISHED"
    },
    {
      "text": "%sh\nls -lh /tmp/rddsequence",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:17:08.995",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "total 8.0K\n-rw-r--r-- 1 root root  99 Nov 25 16:17 part-00000\n-rw-r--r-- 1 root root 113 Nov 25 16:17 part-00001\n-rw-r--r-- 1 root root   0 Nov 25 16:17 _SUCCESS\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541584001996_777416912",
      "id": "20181107-094641_500693034",
      "dateCreated": "2018-11-07 09:46:41.000",
      "dateStarted": "2020-11-25 16:17:09.083",
      "dateFinished": "2020-11-25 16:17:09.099",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n# Recuperamos en otro rdd\nrdd2 \u003d sc.sequenceFile(\"file:///tmp/rddsequence\", \n                       \"org.apache.hadoop.io.Text\",\n                       \"org.apache.hadoop.io.IntWritable\")\n                       \nprint(\"Contenido del RDD {0}\".format(rdd2.collect()))",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 19:05:55.390",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541584026263_1511040329",
      "id": "20181107-094706_377782640",
      "dateCreated": "2018-11-07 09:47:06.000",
      "dateStarted": "2020-06-17 19:05:55.672",
      "dateFinished": "2020-06-17 19:05:56.305",
      "status": "FINISHED",
      "errorMessage": ""
    },
    {
      "text": "%sh\nrm -rf /tmp/rddsequence",
      "user": "anonymous",
      "dateUpdated": "2020-11-25 16:17:53.759",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1541584392815_-469930073",
      "id": "20181107-095312_1747826079",
      "dateCreated": "2018-11-07 09:53:12.000",
      "dateStarted": "2020-11-25 16:17:53.850",
      "dateFinished": "2020-11-25 16:17:53.862",
      "status": "FINISHED"
    }
  ],
  "name": "3.6. RDDs",
  "id": "2CUVZPV4C",
  "defaultInterpreterGroup": "spark",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}